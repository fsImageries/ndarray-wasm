(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_f64_i32_=>_none (func (param i32 f64 i32)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 f64) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $f64_=>_f64 (func (param f64) (result f64)))
 (type $i32_i32_f64_=>_none (func (param i32 i32 f64)))
 (import "env" "memory" (memory $0 1))
 (data (i32.const 1036) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00N\00D\00A\00r\00r\00a\00y\00 \00T\00e\00s\00t\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1100) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00F\00\00\00s\00h\00o\00u\00l\00d\00 \00t\00e\00s\00t\00 \00N\00D\00A\00r\00r\00a\00y\00 \00g\00e\00t\00t\00e\00r\00s\00/\00s\00e\00t\00t\00e\00r\00s\00\00\00\00\00\00\00")
 (data (i32.const 1196) "\\\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@\00\00\00\00\00\00\1c@\00\00\00\00\00\00 @\00\00\00\00")
 (data (i32.const 1292) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 1356) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1424) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1456) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1484) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1548) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1600) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1628) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1692) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 1740) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 1788) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 1852) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1884) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2012) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 2044) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 2076) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00b\00\00\00O\00n\00l\00y\00 \00g\00e\00t\00t\00e\00r\00 \00w\00i\00t\00h\00 \00s\00a\00m\00e\00 \00s\00i\00z\00e\00 \00a\00s\00 \00s\00h\00a\00p\00e\00 \00a\00r\00e\00 \00a\00c\00c\00e\00p\00t\00e\00d\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2204) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00n\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 2268) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\\\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00b\00r\00a\00c\00k\00e\00t\00 \00g\00e\00t\00t\00e\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00[\00[\00i\00,\00j\00,\00.\00.\00.\00,\00n\00]\00]\00]\00")
 (data (i32.const 2380) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00f\006\004\00\00\00\00\00\00\00")
 (data (i32.const 2412) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 2476) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00t\00\00\00n\00o\00d\00e\00_\00m\00o\00d\00u\00l\00e\00s\00/\00@\00a\00s\00-\00p\00e\00c\00t\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00a\00s\00s\00e\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2620) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 2652) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00n\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00g\00e\00t\00 \00g\00e\00t\00t\00e\00r\00 \00f\00u\00n\00c\00t\00i\00o\00n\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00g\00e\00t\00(\00[\00i\00,\00j\00,\00.\00.\00.\00,\00n\00]\00)\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2796) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 2828) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 2860) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00|\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00e\00t\00 \00s\00e\00t\00t\00e\00r\00 \00f\00u\00n\00c\00t\00i\00o\00n\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00e\00t\00(\00v\00a\00l\00u\00e\00,\00 \00[\00i\00,\00j\00,\00.\00.\00.\00,\00n\00]\00)\00]\00")
 (data (i32.const 3004) "\\\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@\00\00\00\00\00\00\1c@\00\00\00\00\00\00 @\00\00\00\00\00\00\"@\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 3132) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 3164) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\84\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00g\00e\00t\00t\00e\00r\00 \00b\00e\00f\00o\00r\00e\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00g\00e\00t\00(\00v\00a\00l\00u\00e\00,\00 \00[\00i\00,\00j\00,\00.\00.\00.\00,\00n\00]\00)\00]\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3324) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 3356) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\82\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00g\00e\00t\00t\00e\00r\00 \00a\00f\00t\00e\00r\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00g\00e\00t\00(\00v\00a\00l\00u\00e\00,\00 \00[\00i\00,\00j\00,\00.\00.\00.\00,\00n\00]\00)\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3516) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3548) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 3580) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\\\00\00\00f\00u\00n\00c\00t\00i\00o\00n\00 \00t\00a\00k\00e\00s\00 \00a\00t\00 \00l\00e\00a\00s\00t\00 \00o\00n\00e\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00(\000\00 \00g\00i\00v\00e\00n\00)\00")
 (data (i32.const 3692) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3724) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3756) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00L\00\00\00c\00a\00n\00 \00o\00n\00l\00y\00 \00s\00p\00e\00c\00i\00f\00y\00 \00o\00n\00e\00 \00u\00n\00k\00n\00o\00w\00n\00 \00d\00i\00m\00e\00n\00s\00i\00o\00n\00")
 (data (i32.const 3852) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00R\00\00\00t\00o\00t\00a\00l\00 \00s\00i\00z\00e\00 \00o\00f\00 \00n\00e\00w\00 \00a\00r\00r\00a\00y\00 \00m\00u\00s\00t\00 \00b\00e\00 \00u\00n\00c\00h\00a\00n\00g\00e\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3964) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00j\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00\'\00u\00n\00c\00h\00e\00c\00k\00e\00d\00\'\00 \00g\00e\00t\00t\00e\00r\00.\00 \00[\00u\00n\00c\00h\00e\00c\00k\00e\00d\00(\00N\00d\00A\00r\00r\00a\00y\00[\00i\00d\00x\00]\00)\00]\00\00\00")
 (data (i32.const 4092) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00z\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00\'\00u\00n\00c\00h\00e\00c\00k\00e\00d\00\'\00 \00s\00e\00t\00t\00e\00r\00.\00 \00[\00u\00n\00c\00h\00e\00c\00k\00e\00d\00(\00N\00d\00A\00r\00r\00a\00y\00[\00i\00d\00x\00]\00 \00=\00 \00v\00a\00l\00u\00e\00)\00]\00\00\00")
 (data (i32.const 4236) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\8a\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00\'\00u\00n\00c\00h\00e\00c\00k\00e\00d\00\'\00 \00g\00e\00t\00t\00e\00r\00 \00a\00f\00t\00e\00r\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00.\00 \00[\00u\00n\00c\00h\00e\00c\00k\00e\00d\00(\00N\00d\00A\00r\00r\00a\00y\00[\00i\00d\00x\00]\00)\00]\00\00\00")
 (data (i32.const 4396) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4428) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\006\00\00\00s\00h\00o\00u\00l\00d\00 \00t\00e\00s\00t\00 \00m\00a\00t\00h\00 \00o\00p\00e\00r\00a\00t\00i\00o\00n\00s\00\00\00\00\00\00\00")
 (data (i32.const 4508) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\10@\00\00\00\00\00\00\18@\00\00\00\00\00\00 @\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 4604) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\00@\00\00\00\00\00\00\00@\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4668) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 4700) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\10@\00\00\00\00\00\00\18@\00\00\00\00\00\00 @\00\00\00\00\00\00$@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4764) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 4796) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00b\00\00\00C\00a\00n\00n\00o\00t\00 \00o\00p\00e\00r\00a\00t\00e\00 \00o\00n\00 \00a\00r\00r\00a\00y\00 \00w\00i\00t\00h\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00l\00e\00n\00g\00t\00h\00s\00.\00 \00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4924) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00)\00 \00(\00\00\00\00\00\00\00")
 (data (i32.const 4956) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4988) ",\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\14\00\00\00\d0\12\00\00\00\00\00\00P\13\00\00\00\00\00\00p\13\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5036) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5164) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 5228) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const
 (data (i32.const 5660) "\1c\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6716) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 6812) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6844) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00b\00\00\00C\00a\00n\00n\00o\00t\00 \00o\00p\00e\00r\00a\00t\00e\00 \00o\00n\00 \00a\00r\00r\00a\00y\00s\00 \00w\00i\00t\00h\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00s\00h\00a\00p\00e\00s\00.\00 \00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6972) ",\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\14\00\00\00\d0\1a\00\00\00\00\00\00P\13\00\00\00\00\00\00p\13\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7020) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7052) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\\\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00a\00d\00d\00i\00t\00i\00o\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00+\00 \00N\00d\00A\00r\00r\00a\00y\00]\00")
 (data (i32.const 7164) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00c\00a\00c\00h\00e\00L\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00v\00e\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7244) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7276) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 7324) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7356) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7388) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00N\00d\00A\00r\00r\00a\00y\00<\00f\006\004\00>\00\00\00\00\00")
 (data (i32.const 7436) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7500) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 7548) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7580) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00d\00a\00t\00a\00\00\00\00\00")
 (data (i32.const 7612) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g\00")
 (data (i32.const 7644) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00S\00t\00a\00t\00i\00c\00A\00r\00r\00a\00y\00<\00f\006\004\00>\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7708) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00s\00h\00a\00p\00e\00\00\00")
 (data (i32.const 7740) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00A\00r\00r\00a\00y\00<\00i\003\002\00>\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7788) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00i\003\002\00\00\00\00\00\00\00")
 (data (i32.const 7820) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00s\00t\00r\00i\00d\00e\00")
 (data (i32.const 7852) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00o\00f\00f\00s\00e\00t\00")
 (data (i32.const 7884) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00d\00i\00m\00\00\00\00\00\00\00")
 (data (i32.const 7916) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00_\00i\00n\00d\00i\00c\00e\00s\00C\00a\00c\00h\00e\00\00\00")
 (data (i32.const 7964) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00D\00\00\00S\00t\00a\00t\00i\00c\00A\00r\00r\00a\00y\00<\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00/\00A\00r\00r\00a\00y\00<\00i\003\002\00>\00>\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8060) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\10@\00\00\00\00\00\00\18@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8124) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 8156) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00u\00b\00s\00t\00r\00a\00c\00t\00i\00o\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00-\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8284) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\10@\00\00\00\00\00\00 @\00\00\00\00\00\00(@\00\00\00\00\00\000@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8348) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 8380) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00h\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00m\00u\00l\00t\00i\00p\00l\00i\00c\00a\00t\00i\00o\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00*\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00")
 (data (i32.const 8508) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8572) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 8604) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\\\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00d\00i\00v\00i\00s\00i\00o\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00/\00 \00N\00d\00A\00r\00r\00a\00y\00]\00")
 (data (i32.const 8716) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8748) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00@\00\00\00s\00h\00o\00u\00l\00d\00 \00t\00e\00s\00t\00 \00c\00o\00m\00p\00a\00r\00i\00s\00o\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8844) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\10@\00\00\00\00\00\00\18@\00\00\00\00\00\00 @\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8908) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 8940) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 8972) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\08@\00\00\00\00\00\00\14@\00\00\00\00\00\00\1c@\00\00\00\00\00\00\"@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9036) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 9068) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00e\00q\00u\00a\00l\00i\00t\00y\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00=\00=\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9196) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00b\00o\00o\00l\00\00\00\00\00")
 (data (i32.const 9228) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00b\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00i\00n\00e\00q\00u\00a\00l\00i\00t\00y\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00!\00=\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9356) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00l\00e\00s\00s\00 \00t\00h\00a\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00<\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9484) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00>\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9612) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00t\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00e\00q\00u\00a\00l\00s\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00>\00=\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9756) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00n\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00l\00e\00s\00s\00 \00t\00h\00a\00n\00 \00e\00q\00u\00a\00l\00s\00 \00o\00p\00e\00r\00a\00t\00o\00r\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00 \00<\00=\00 \00N\00d\00A\00r\00r\00a\00y\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9900) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9932) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00:\00\00\00s\00h\00o\00u\00l\00d\00 \00t\00e\00s\00t\00 \00s\00l\00i\00c\00i\00n\00g\00 \00o\00p\00e\00r\00a\00t\00o\00r\00s\00\00\00")
 (data (i32.const 10012) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 10044) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 10076) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00W\00r\00o\00n\00g\00 \00s\00h\00a\00p\00e\00s\00\00\00\00\00")
 (data (i32.const 10124) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 10156) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 10188) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 10220) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00F\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00b\00a\00s\00e\00 \00s\00h\00a\00p\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00h\00a\00p\00e\00]\00\00\00\00\00\00\00")
 (data (i32.const 10316) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10348) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10380) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 10412) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00J\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00b\00a\00s\00e\00 \00s\00t\00r\00i\00d\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00t\00r\00i\00d\00e\00]\00\00\00")
 (data (i32.const 10508) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00J\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00b\00a\00s\00e\00 \00o\00f\00f\00s\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00o\00f\00f\00s\00e\00t\00]\00\00\00")
 (data (i32.const 10604) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 10636) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00h\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00 \00s\00h\00a\00p\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00t\00r\00a\00n\00s\00p\00o\00s\00e\00(\00)\00.\00s\00h\00a\00p\00e\00]\00\00\00\00\00")
 (data (i32.const 10764) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 10796) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00l\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00 \00s\00t\00r\00i\00d\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00t\00r\00a\00n\00s\00p\00o\00s\00e\00(\00)\00.\00s\00t\00r\00i\00d\00e\00]\00")
 (data (i32.const 10924) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00l\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00 \00o\00f\00f\00s\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00t\00r\00a\00n\00s\00p\00o\00s\00e\00(\00)\00.\00o\00f\00f\00s\00e\00t\00]\00")
 (data (i32.const 11052) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 11084) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00R\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00l\00o\00 \00s\00h\00a\00p\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00l\00o\00(\00.\00.\00.\00)\00.\00s\00h\00a\00p\00e\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11196) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 11228) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00V\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00l\00o\00 \00s\00t\00r\00i\00d\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00l\00o\00(\00.\00.\00.\00)\00.\00s\00t\00r\00i\00d\00e\00]\00\00\00\00\00\00\00")
 (data (i32.const 11340) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00V\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00l\00o\00 \00o\00f\00f\00s\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00l\00o\00(\00.\00.\00.\00)\00.\00o\00f\00f\00s\00e\00t\00]\00\00\00\00\00\00\00")
 (data (i32.const 11452) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 11484) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00R\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00h\00i\00 \00s\00h\00a\00p\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00h\00i\00(\00.\00.\00.\00)\00.\00s\00h\00a\00p\00e\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11596) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 11628) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00V\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00h\00i\00 \00s\00t\00r\00i\00d\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00h\00i\00(\00.\00.\00.\00)\00.\00s\00t\00r\00i\00d\00e\00]\00\00\00\00\00\00\00")
 (data (i32.const 11740) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00V\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00h\00i\00 \00o\00f\00f\00s\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00h\00i\00(\00.\00.\00.\00)\00.\00o\00f\00f\00s\00e\00t\00]\00\00\00\00\00\00\00")
 (data (i32.const 11852) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 11884) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00Z\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00t\00e\00p\00 \00s\00h\00a\00p\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00t\00e\00p\00(\00.\00.\00.\00)\00.\00s\00h\00a\00p\00e\00]\00\00\00")
 (data (i32.const 11996) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\fd\ff\ff\ff\01\00\00\00\00\00\00\00")
 (data (i32.const 12028) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00t\00e\00p\00 \00s\00t\00r\00i\00d\00e\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00t\00e\00p\00(\00.\00.\00.\00)\00.\00s\00t\00r\00i\00d\00e\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12156) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00t\00e\00p\00 \00o\00f\00f\00s\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00t\00e\00p\00(\00.\00.\00.\00)\00.\00o\00f\00f\00s\00e\00t\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12284) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12332) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12364) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12396) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12428) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00")
 (data (i32.const 12460) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\0c\00\00\00\04\00\00\00\01\00\00\00")
 (data (i32.const 12492) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00p\00i\00c\00k\001\00\00\00")
 (data (i32.const 12524) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00N\00d\00A\00r\00r\00a\00y\00.\00p\00i\00c\00k\00\00\00\00\00")
 (data (i32.const 12572) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12652) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00d\00i\00m\00 \00s\00h\00a\00p\00e\00.\00 \00[\00\00\00\00\00")
 (data (i32.const 12700) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00(\00.\00.\00.\00)\00.\00s\00h\00a\00p\00e\00]\00\00\00\00\00")
 (data (i32.const 12748) ",\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\1c\00\00\0001\00\00\00\00\00\00`1\00\00\00\00\00\00\801\00\00\00\00\00\00\b01\00\00")
 (data (i32.const 12796) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00d\00i\00m\00 \00s\00t\00r\00i\00d\00e\00.\00 \00[\00\00\00")
 (data (i32.const 12844) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00(\00.\00.\00.\00)\00.\00s\00t\00r\00i\00d\00e\00]\00\00\00")
 (data (i32.const 12892) ",\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\1c\00\00\0001\00\00\00\00\00\00`1\00\00\00\00\00\00\102\00\00\00\00\00\00@2\00\00")
 (data (i32.const 12940) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00d\00i\00m\00 \00o\00f\00f\00s\00e\00t\00.\00 \00[\00\00\00")
 (data (i32.const 12988) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00(\00.\00.\00.\00)\00.\00o\00f\00f\00s\00e\00t\00]\00\00\00")
 (data (i32.const 13036) ",\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\1c\00\00\0001\00\00\00\00\00\00`1\00\00\00\00\00\00\a02\00\00\00\00\00\00\d02\00\00")
 (data (i32.const 13084) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13116) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00j\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00p\00i\00c\00k\00 \001\00d\00i\00m\00 \00g\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00p\00i\00c\00k\00(\00[\00n\00]\00)\00.\00g\00e\00t\00(\00[\00.\00.\00.\00]\00)\00]\00\00\00")
 (data (i32.const 13244) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00")
 (data (i32.const 13276) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13308) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13340) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00p\00i\00c\00k\003\00\00\00")
 (data (i32.const 13372) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13404) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00r\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00p\00i\00c\00k\00 \003\00d\00i\00m\00 \00g\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00p\00i\00c\00k\00(\00[\00n\00,\00j\00,\00k\00]\00)\00.\00g\00e\00t\00(\00[\00.\00.\00.\00]\00)\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13548) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\01\00\00\00")
 (data (i32.const 13580) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 13612) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 13644) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00s\00l\00i\00c\00e\00\00\00")
 (data (i32.const 13676) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00N\00d\00A\00r\00r\00a\00y\00.\00s\00l\00i\00c\00e\00\00\00")
 (data (i32.const 13724) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13756) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00n\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00l\00i\00c\00e\00 \002\00d\00i\00m\00 \00g\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00l\00i\00c\00e\00(\00.\00.\00.\00)\00.\00g\00e\00t\00(\00[\000\00,\000\00]\00)\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13900) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 13932) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00n\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00l\00i\00c\00e\00 \002\00d\00i\00m\00 \00g\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00l\00i\00c\00e\00(\00.\00.\00.\00)\00.\00g\00e\00t\00(\00[\000\00,\001\00]\00)\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14076) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 14108) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00n\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00s\00l\00i\00c\00e\00 \002\00d\00i\00m\00 \00g\00e\00t\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00s\00l\00i\00c\00e\00(\00.\00.\00.\00)\00.\00g\00e\00t\00(\00[\000\00,\002\00]\00)\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14252) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14284) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 14316) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 14348) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00s\00l\00i\00c\00e\002\00")
 (data (i32.const 14380) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14412) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00T\00\00\00s\00h\00o\00u\00l\00d\00 \00t\00e\00s\00t\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00 \00a\00n\00d\00 \00o\00r\00d\00e\00r\00 \00o\00p\00e\00r\00a\00t\00i\00o\00n\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14524) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00")
 (data (i32.const 14556) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14588) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14636) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14668) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14700) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 14732) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 14764) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 14796) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00")
 (data (i32.const 14828) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\02\00\00\00\00\00\00\00\01\00\00\00")
 (data (i32.const 14860) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00")
 (data (i32.const 14892) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\02\00\00\00\01\00\00\00")
 (data (i32.const 14924) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00o\00r\00d\00e\00r\00 \00b\00e\00f\00o\00r\00e\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00 \00(\00v\00a\00r\00:\00\00\00\00\00")
 (data (i32.const 15020) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00)\00.\00 \00[\00N\00d\00A\00r\00r\00a\00y\00.\00o\00r\00d\00e\00r\00(\00)\00]\00\00\00\00\00")
 (data (i32.const 15084) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\0c\00\00\00`:\00\00\00\00\00\00\c0:\00\00")
 (data (i32.const 15116) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00F\00\00\00T\00e\00s\00t\00i\00n\00g\00 \00o\00r\00d\00e\00r\00 \00a\00f\00t\00e\00r\00 \00t\00r\00a\00n\00s\00p\00o\00s\00e\00 \00(\00v\00a\00r\00:\00\00\00\00\00\00\00")
 (data (i32.const 15212) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\0c\00\00\00 ;\00\00\00\00\00\00\c0:\00\00")
 (data (i32.const 15244) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15276) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 15308) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00")
 (data (i32.const 15340) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15372) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15404) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15436) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15468) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\03\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15516) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15564) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15596) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00@\00\00\00s\00h\00o\00u\00l\00d\00 \00t\00e\00s\00t\00 \00p\00l\00a\00y\00g\00r\00o\00u\00n\00d\00 \00o\00p\00e\00r\00a\00t\00o\00r\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15692) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00")
 (data (i32.const 15724) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15760) "\00\00\00\00\00\a0\f6?\00\00\00\00\00\00\00\00\00\c8\b9\f2\82,\d6\bf\80V7($\b4\fa<\00\00\00\00\00\80\f6?\00\00\00\00\00\00\00\00\00\08X\bf\bd\d1\d5\bf \f7\e0\d8\08\a5\1c\bd\00\00\00\00\00`\f6?\00\00\00\00\00\00\00\00\00XE\17wv\d5\bfmP\b6\d5\a4b#\bd\00\00\00\00\00@\f6?\00\00\00\00\00\00\00\00\00\f8-\87\ad\1a\d5\bf\d5g\b0\9e\e4\84\e6\bc\00\00\00\00\00 \f6?\00\00\00\00\00\00\00\00\00xw\95_\be\d4\bf\e0>)\93i\1b\04\bd\00\00\00\00\00\00\f6?\00\00\00\00\00\00\00\00\00`\1c\c2\8ba\d4\bf\cc\84LH/\d8\13=\00\00\00\00\00\e0\f5?\00\00\00\00\00\00\00\00\00\a8\86\860\04\d4\bf:\0b\82\ed\f3B\dc<\00\00\00\00\00\c0\f5?\00\00\00\00\00\00\00\00\00HiUL\a6\d3\bf`\94Q\86\c6\b1 =\00\00\00\00\00\a0\f5?\00\00\00\00\00\00\00\00\00\80\98\9a\ddG\d3\bf\92\80\c5\d4MY%=\00\00\00\00\00\80\f5?\00\00\00\00\00\00\00\00\00 \e1\ba\e2\e8\d2\bf\d8+\b7\99\1e{&=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00@\f5?\00\00\00\00\00\00\00\00\00x\cf\fbA)\d2\bfv\daS($Z\16\bd\00\00\00\00\00 \f5?\00\00\00\00\00\00\00\00\00\98i\c1\98\c8\d1\bf\04T\e7h\bc\af\1f\bd\00\00\00\00\00\00\f5?\00\00\00\00\00\00\00\00\00\a8\ab\ab\\g\d1\bf\f0\a8\823\c6\1f\1f=\00\00\00\00\00\e0\f4?\00\00\00\00\00\00\00\00\00H\ae\f9\8b\05\d1\bffZ\05\fd\c4\a8&\bd\00\00\00\00\00\c0\f4?\00\00\00\00\00\00\00\00\00\90s\e2$\a3\d0\bf\0e\03\f4~\eek\0c\bd\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\80\f4?\00\00\00\00\00\00\00\00\00@^m\18\b9\cf\bf\87<\99\ab*W\0d=\00\00\00\00\00`\f4?\00\00\00\00\00\00\00\00\00`\dc\cb\ad\f0\ce\bf$\af\86\9c\b7&+=\00\00\00\00\00@\f4?\00\00\00\00\00\00\00\00\00\f0*n\07\'\ce\bf\10\ff?TO/\17\bd\00\00\00\00\00 \f4?\00\00\00\00\00\00\00\00\00\c0Ok!\\\cd\bf\1bh\ca\bb\91\ba!=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\e0\f3?\00\00\00\00\00\00\00\00\00\90-t\86\c2\cb\bf\8f\b7\8b1\b0N\19=\00\00\00\00\00\c0\f3?\00\00\00\00\00\00\00\00\00\c0\80N\c9\f3\ca\bff\90\cd?cN\ba<\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\80\f3?\00\00\00\00\00\00\00\00\00P\f4\9cZR\c9\bf\e3\d4\c1\04\d9\d1*\bd\00\00\00\00\00`\f3?\00\00\00\00\00\00\00\00\00\d0 e\a0\7f\c8\bf\t\fa\db\7f\bf\bd+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00 \f3?\00\00\00\00\00\00\00\00\00\d0\19\e7\0f\d6\c6\bff\e2\b2\a3j\e4\10\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\e0\f2?\00\00\00\00\00\00\00\00\00\b0\a1\e3\e5&\c5\bf\8f[\07\90\8b\de \bd\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\a0\f2?\00\00\00\00\00\00\00\00\00\90\1e \fcq\c3\bf:T\'M\86x\f1<\00\00\00\00\00\80\f2?\00\00\00\00\00\00\00\00\00\f0\1f\f8R\95\c2\bf\08\c4q\170\8d$\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00 \f2?\00\00\00\00\00\00\00\00\00\e0\db1\91\ec\bf\bf\f23\a3\\Tu%\bd\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\e0\f1?\00\00\00\00\00\00\00\00\00\c0[\8fT^\bc\bf\06\be_XW\0c\1d\bd\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\80\f1?\00\00\00\00\00\00\00\00\00`\e5\8a\d2\f0\b6\bf\das3\c97\97&\bd\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00 \f1?\00\00\00\00\00\00\00\00\00\80\a3\ee6e\b1\bf\t\a3\8fv^|\14=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00`\f0?\00\00\00\00\00\00\00\00\00\80\d5\07\1b\b9\97\bf9\a6\fa\93T\8d(\bd\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\0d?\e2\19\bd\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\0d?\e2\19\bd\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ef?\00\00\00\00\00\00\00\00\00\00\89u\15\10\80?\e8+\9d\99k\c7\10\bd\00\00\00\00\00\80\ef?\00\00\00\00\00\00\00\00\00\80\93XV \90?\d2\f7\e2\06[\dc#\bd\00\00\00\00\00@\ef?\00\00\00\00\00\00\00\00\00\00\c9(%I\98?4\0cZ2\ba\a0*\bd\00\00\00\00\00\00\ef?\00\00\00\00\00\00\00\00\00@\e7\89]A\a0?S\d7\f1\\\c0\11\01=\00\00\00\00\00\c0\ee?\00\00\00\00\00\00\00\00\00\00.\d4\aef\a4?(\fd\bdus\16,\bd\00\00\00\00\00\80\ee?\00\00\00\00\00\00\00\00\00\c0\9f\14\aa\94\a8?}&Z\d0\95y\19\bd\00\00\00\00\00@\ee?\00\00\00\00\00\00\00\00\00\c0\dd\cds\cb\ac?\07(\d8G\f2h\1a\bd\00\00\00\00\00 \ee?\00\00\00\00\00\00\00\00\00\c0\06\c01\ea\ae?{;\c9O>\11\0e\bd\00\00\00\00\00\e0\ed?\00\00\00\00\00\00\00\00\00`F\d1;\97\b1?\9b\9e\0dV]2%\bd\00\00\00\00\00\a0\ed?\00\00\00\00\00\00\00\00\00\e0\d1\a7\f5\bd\b3?\d7N\db\a5^\c8,=\00\00\00\00\00`\ed?\00\00\00\00\00\00\00\00\00\a0\97MZ\e9\b5?\1e\1d]<\06i,\bd\00\00\00\00\00@\ed?\00\00\00\00\00\00\00\00\00\c0\ea\n\d3\00\b7?2\ed\9d\a9\8d\1e\ec<\00\00\00\00\00\00\ed?\00\00\00\00\00\00\00\00\00@Y]^3\b9?\daG\bd:\\\11#=\00\00\00\00\00\c0\ec?\00\00\00\00\00\00\00\00\00`\ad\8d\c8j\bb?\e5h\f7+\80\90\13\bd\00\00\00\00\00\a0\ec?\00\00\00\00\00\00\00\00\00@\bc\01X\88\bc?\d3\acZ\c6\d1F&=\00\00\00\00\00`\ec?\00\00\00\00\00\00\00\00\00 \n\839\c7\be?\e0E\e6\afh\c0-\bd\00\00\00\00\00@\ec?\00\00\00\00\00\00\00\00\00\e0\db9\91\e8\bf?\fd\n\a1O\d64%\bd\00\00\00\00\00\00\ec?\00\00\00\00\00\00\00\00\00\e0\'\82\8e\17\c1?\f2\07-\cex\ef!=\00\00\00\00\00\e0\eb?\00\00\00\00\00\00\00\00\00\f0#~+\aa\c1?4\998D\8e\a7,=\00\00\00\00\00\a0\eb?\00\00\00\00\00\00\00\00\00\80\86\0ca\d1\c2?\a1\b4\81\cbl\9d\03=\00\00\00\00\00\80\eb?\00\00\00\00\00\00\00\00\00\90\15\b0\fce\c3?\89rK#\a8/\c6<\00\00\00\00\00@\eb?\00\00\00\00\00\00\00\00\00\b03\83=\91\c4?x\b6\fdTy\83%=\00\00\00\00\00 \eb?\00\00\00\00\00\00\00\00\00\b0\a1\e4\e5\'\c5?\c7}i\e5\e83&=\00\00\00\00\00\e0\ea?\00\00\00\00\00\00\00\00\00\10\8c\beNW\c6?x.<,\8b\cf\19=\00\00\00\00\00\c0\ea?\00\00\00\00\00\00\00\00\00pu\8b\12\f0\c6?\e1!\9c\e5\8d\11%\bd\00\00\00\00\00\a0\ea?\00\00\00\00\00\00\00\00\00PD\85\8d\89\c7?\05C\91p\10f\1c\bd\00\00\00\00\00`\ea?\00\00\00\00\00\00\00\00\00\009\eb\af\be\c8?\d1,\e9\aaT=\07\bd\00\00\00\00\00@\ea?\00\00\00\00\00\00\00\00\00\00\f7\dcZZ\c9?o\ff\a0X(\f2\07=\00\00\00\00\00\00\ea?\00\00\00\00\00\00\00\00\00\e0\8a<\ed\93\ca?i!VPCr(\bd\00\00\00\00\00\e0\e9?\00\00\00\00\00\00\00\00\00\d0[W\d81\cb?\aa\e1\acN\8d5\0c\bd\00\00\00\00\00\c0\e9?\00\00\00\00\00\00\00\00\00\e0;8\87\d0\cb?\b6\12TY\c4K-\bd\00\00\00\00\00\a0\e9?\00\00\00\00\00\00\00\00\00\10\f0\c6\fbo\cc?\d2+\96\c5r\ec\f1\bc\00\00\00\00\00`\e9?\00\00\00\00\00\00\00\00\00\90\d4\b0=\b1\cd?5\b0\15\f7*\ff*\bd\00\00\00\00\00@\e9?\00\00\00\00\00\00\00\00\00\10\e7\ff\0eS\ce?0\f4A`\'\12\c2<\00\00\00\00\00 \e9?\00\00\00\00\00\00\00\00\00\00\dd\e4\ad\f5\ce?\11\8e\bbe\15!\ca\bc\00\00\00\00\00\00\e9?\00\00\00\00\00\00\00\00\00\b0\b3l\1c\99\cf?0\df\0c\ca\ec\cb\1b=\00\00\00\00\00\c0\e8?\00\00\00\00\00\00\00\00\00XM`8q\d0?\91N\ed\16\db\9c\f8<\00\00\00\00\00\a0\e8?\00\00\00\00\00\00\00\00\00`ag-\c4\d0?\e9\ea<\16\8b\18\'=\00\00\00\00\00\80\e8?\00\00\00\00\00\00\00\00\00\e8\'\82\8e\17\d1?\1c\f0\a5c\0e!,\bd\00\00\00\00\00`\e8?\00\00\00\00\00\00\00\00\00\f8\ac\cb\\k\d1?\81\16\a5\f7\cd\9a+=\00\00\00\00\00@\e8?\00\00\00\00\00\00\00\00\00hZc\99\bf\d1?\b7\bdGQ\ed\a6,=\00\00\00\00\00 \e8?\00\00\00\00\00\00\00\00\00\b8\0emE\14\d2?\ea\baF\ba\de\87\n=\00\00\00\00\00\e0\e7?\00\00\00\00\00\00\00\00\00\90\dc|\f0\be\d2?\f4\04PJ\fa\9c*=\00\00\00\00\00\c0\e7?\00\00\00\00\00\00\00\00\00`\d3\e1\f1\14\d3?\b8<!\d3z\e2(\bd\00\00\00\00\00\a0\e7?\00\00\00\00\00\00\00\00\00\10\bevgk\d3?\c8w\f1\b0\cdn\11=\00\00\00\00\00\80\e7?\00\00\00\00\00\00\00\00\0003wR\c2\d3?\\\bd\06\b6T;\18=\00\00\00\00\00`\e7?\00\00\00\00\00\00\00\00\00\e8\d5#\b4\19\d4?\9d\e0\90\ec6\e4\08=\00\00\00\00\00@\e7?\00\00\00\00\00\00\00\00\00\c8q\c2\8dq\d4?u\d6g\t\ce\'/\bd\00\00\00\00\00 \e7?\00\00\00\00\00\00\00\00\000\17\9e\e0\c9\d4?\a4\d8\n\1b\89 .\bd\00\00\00\00\00\00\e7?\00\00\00\00\00\00\00\00\00\a08\07\ae\"\d5?Y\c7d\81p\be.=\00\00\00\00\00\e0\e6?\00\00\00\00\00\00\00\00\00\d0\c8S\f7{\d5?\ef@]\ee\ed\ad\1f=\00\00\00\00\00\c0\e6?\00\00\00\00\00\00\00\00\00`Y\df\bd\d5\d5?\dce\a4\08*\0b\n\bd")
 (data (i32.const 19856) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?n\bf\88\1aO;\9b<53\fb\a9=\f6\ef?]\dc\d8\9c\13`q\bca\80w>\9a\ec\ef?\d1f\87\10z^\90\bc\85\7fn\e8\15\e3\ef?\13\f6g5R\d2\8c<t\85\15\d3\b0\d9\ef?\fa\8e\f9#\80\ce\8b\bc\de\f6\dd)k\d0\ef?a\c8\e6aN\f7`<\c8\9bu\18E\c7\ef?\99\d33[\e4\a3\90<\83\f3\c6\ca>\be\ef?m{\83]\a6\9a\97<\0f\89\f9lX\b5\ef?\fc\ef\fd\92\1a\b5\8e<\f7Gr+\92\ac\ef?\d1\9c/p=\be><\a2\d1\d32\ec\a3\ef?\0bn\90\894\03j\bc\1b\d3\fe\aff\9b\ef?\0e\bd/*RV\95\bcQ[\12\d0\01\93\ef?U\eaN\8c\ef\80P\bc\cc1l\c0\bd\8a\ef?\16\f4\d5\b9#\c9\91\bc\e0-\a9\ae\9a\82\ef?\afU\\\e9\e3\d3\80<Q\8e\a5\c8\98z\ef?H\93\a5\ea\15\1b\80\bc{Q}<\b8r\ef?=2\deU\f0\1f\8f\bc\ea\8d\8c8\f9j\ef?\bfS\13?\8c\89\8b<u\cbo\eb[c\ef?&\eb\11v\9c\d9\96\bc\d4\\\04\84\e0[\ef?`/:>\f7\ec\9a<\aa\b9h1\87T\ef?\9d8\86\cb\82\e7\8f\bc\1d\d9\fc\"PM\ef?\8d\c3\a6DAo\8a<\d6\8cb\88;F\ef?}\04\e4\b0\05z\80<\96\dc}\91I?\ef?\94\a8\a8\e3\fd\8e\96<8bunz8\ef?}Ht\f2\18^\87<?\a6\b2O\ce1\ef?\f2\e7\1f\98+G\80<\dd|\e2eE+\ef?^\08q?{\b8\96\bc\81c\f5\e1\df$\ef?1\ab\tm\e1\f7\82<\e1\de\1f\f5\9d\1e\ef?\fa\bfo\1a\9b!=\bc\90\d9\da\d0\7f\18\ef?\b4\n\0cr\827\8b<\0b\03\e4\a6\85\12\ef?\8f\cb\ce\89\92\14n<V/>\a9\af\0c\ef?\b6\ab\b0MuM\83<\15\b71\n\fe\06\ef?Lt\ac\e2\01B\86<1\d8L\fcp\01\ef?J\f8\d3]9\dd\8f<\ff\16d\b2\08\fc\ee?\04[\8e;\80\a3\86\bc\f1\9f\92_\c5\f6\ee?hPK\cc\edJ\92\bc\cb\a9:7\a7\f1\ee?\8e-Q\1b\f8\07\99\bcf\d8\05m\ae\ec\ee?\d26\94>\e8\d1q\bc\f7\9f\e54\db\e7\ee?\15\1b\ce\b3\19\19\99\bc\e5\a8\13\c3-\e3\ee?mL*\a7H\9f\85<\"4\12L\a6\de\ee?\8ai(z`\12\93\bc\1c\80\ac\04E\da\ee?[\89\17H\8f\a7X\bc*.\f7!\n\d6\ee?\1b\9aIg\9b,|\bc\97\a8P\d9\f5\d1\ee?\11\ac\c2`\edcC<-\89a`\08\ce\ee?\efd\06;\tf\96<W\00\1d\edA\ca\ee?y\03\a1\da\e1\ccn<\d0<\c1\b5\a2\c6\ee?0\12\0f?\8e\ff\93<\de\d3\d7\f0*\c3\ee?\b0\afz\bb\ce\90v<\'*6\d5\da\bf\ee?w\e0T\eb\bd\1d\93<\0d\dd\fd\99\b2\bc\ee?\8e\a3q\004\94\8f\bc\a7,\9dv\b2\b9\ee?I\a3\93\dc\cc\de\87\bcBf\cf\a2\da\b6\ee?_8\0f\bd\c6\dex\bc\82O\9dV+\b4\ee?\f6\\{\ecF\12\86\bc\0f\92]\ca\a4\b1\ee?\8e\d7\fd\18\055\93<\da\'\b56G\af\ee?\05\9b\8a/\b7\98{<\fd\c7\97\d4\12\ad\ee?\tT\1c\e2\e1c\90<)TH\dd\07\ab\ee?\ea\c6\19P\85\c74<\b7FY\8a&\a9\ee?5\c0d+\e62\94<H!\ad\15o\a7\ee?\9fv\99aJ\e4\8c\bc\t\dcv\b9\e1\a5\ee?\a8M\ef;\c53\8c\bc\85U:\b0~\a4\ee?\ae\e9+\89xS\84\bc \c3\cc4F\a3\ee?XXVx\dd\ce\93\bc%\"U\828\a2\ee?d\19~\80\aa\10W<s\a9L\d4U\a1\ee?(\"^\bf\ef\b3\93\bc\cd;\7ff\9e\a0\ee?\82\b94\87\ad\12j\bc\bf\da\0bu\12\a0\ee?\ee\a9m\b8\efgc\bc/\1ae<\b2\9f\ee?Q\88\e0T=\dc\80\bc\84\94Q\f9}\9f\ee?\cf>Z~d\1fx\bct_\ec\e8u\9f\ee?\b0}\8b\c0J\ee\86\bct\81\a5H\9a\9f\ee?\8a\e6U\1e2\19\86\bc\c9gBV\eb\9f\ee?\d3\d4\t^\cb\9c\90<?]\deOi\a0\ee?\1d\a5M\b9\dc2{\bc\87\01\ebs\14\a1\ee?k\c0gT\fd\ec\94<2\c10\01\ed\a1\ee?Ul\d6\ab\e1\ebe<bN\cf6\f3\a2\ee?B\cf\b3/\c5\a1\88\bc\12\1a>T\'\a4\ee?47;\f1\b6i\93\bc\13\ceL\99\89\a5\ee?\1e\ff\19:\84^\80\bc\ad\c7#F\1a\a7\ee?nWr\d8P\d4\94\bc\ed\92D\9b\d9\a8\ee?\00\8a\0e[g\ad\90<\99f\8a\d9\c7\aa\ee?\b4\ea\f0\c1/\b7\8d<\db\a0*B\e5\ac\ee?\ff\e7\c5\9c`\b6e\bc\8cD\b5\162\af\ee?D_\f3Y\83\f6{<6w\15\99\ae\b1\ee?\83=\1e\a7\1f\t\93\bc\c6\ff\91\0b[\b4\ee?)\1el\8b\b8\a9]\bc\e5\c5\cd\b07\b7\ee?Y\b9\90|\f9#l\bc\0fR\c8\cbD\ba\ee?\aa\f9\f4\"CC\92\bcPN\de\9f\82\bd\ee?K\8ef\d7l\ca\85\bc\ba\07\cap\f1\c0\ee?\'\ce\91+\fc\afq<\90\f0\a3\82\91\c4\ee?\bbs\n\e15\d2m<##\e3\19c\c8\ee?c\"b\"\04\c5\87\bce\e5]{f\cc\ee?\d51\e2\e3\86\1c\8b<3-J\ec\9b\d0\ee?\15\bb\bc\d3\d1\bb\91\bc]%>\b2\03\d5\ee?\d21\ee\9c1\cc\90<X\b30\13\9e\d9\ee?\b3Zsn\84i\84<\bf\fdyUk\de\ee?\b4\9d\8e\97\cd\df\82\bcz\f3\d3\bfk\e3\ee?\873\cb\92w\1a\8c<\ad\d3Z\99\9f\e8\ee?\fa\d9\d1J\8f{\90\bcf\b6\8d)\07\ee\ee?\ba\ae\dcV\d9\c3U\bc\fb\15O\b8\a2\f3\ee?@\f6\a6=\0e\a4\90\bc:Y\e5\8dr\f9\ee?4\93\ad8\f4\d6h\bcG^\fb\f2v\ff\ee?5\8aXk\e2\ee\91\bcJ\06\a10\b0\05\ef?\cd\dd_\n\d7\fft<\d2\c1K\90\1e\0c\ef?\ac\98\92\fa\fb\bd\91\bc\t\1e\d7[\c2\12\ef?\b3\0c\af0\aens<\9cR\85\dd\9b\19\ef?\94\fd\9f\\2\e3\8e<z\d0\ff_\ab \ef?\acY\t\d1\8f\e0\84<K\d1W.\f1\'\ef?g\1aN8\af\cdc<\b5\e7\06\94m/\ef?h\19\92l,kg<i\90\ef\dc 7\ef?\d2\b5\cc\83\18\8a\80\bc\fa\c3]U\0b?\ef?o\fa\ff?]\ad\8f\bc|\89\07J-G\ef?I\a9u8\ae\0d\90\bc\f2\89\0d\08\87O\ef?\a7\07=\a6\85\a3t<\87\a4\fb\dc\18X\ef?\0f\"@ \9e\91\82\bc\98\83\c9\16\e3`\ef?\ac\92\c1\d5PZ\8e<\852\db\03\e6i\ef?Kk\01\acY:\84<`\b4\01\f3!s\ef?\1f>\b4\07!\d5\82\bc_\9b{3\97|\ef?\c9\0dG;\b9*\89\bc)\a1\f5\14F\86\ef?\d3\88:`\04\b6t<\f6?\8b\e7.\90\ef?qr\9dQ\ec\c5\83<\83L\c7\fbQ\9a\ef?\f0\91\d3\8f\12\f7\8f\bc\da\90\a4\a2\af\a4\ef?}t#\e2\98\ae\8d\bc\f1g\8e-H\af\ef?\08 \aaA\bc\c3\8e<\'Za\ee\1b\ba\ef?2\eb\a9\c3\94+\84<\97\bak7+\c5\ef?\ee\85\d11\a9d\8a<@En[v\d0\ef?\ed\e3;\e4\ba7\8e\bc\14\be\9c\ad\fd\db\ef?\9d\cd\91M;\89w<\d8\90\9e\81\c1\e7\ef?\89\cc`A\c1\05S<\f1q\8f+\c2\f3\ef?")
 (data (i32.const 21916) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21948) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 21980) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22012) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22044) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22076) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22108) "\1c\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22144) "\17\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\1a\00\00\00\00\00\00\02\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00$\1a\00\00\00\00\00\00\04A\00\00\00\00\00\00 \00\00\00\00\00\00\00\10\t\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04A\00\00\00\00\00\00\02\01\00\00\00\00\00\00$\n\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "rtrace" "onvisit" (func $~lib/rt/rtrace/onvisit (param i32) (result i32)))
 (import "rtrace" "oninit" (func $~lib/rt/rtrace/oninit (param i32)))
 (import "rtrace" "onfree" (func $~lib/rt/rtrace/onfree (param i32)))
 (import "rtrace" "onalloc" (func $~lib/rt/rtrace/onalloc (param i32)))
 (import "__aspect" "createReflectedNumber" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber (param i32 i32 i32 i32 f64) (result i32)))
 (import "__aspect" "attachStackTraceToReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue (param i32)))
 (import "__aspect" "reportActualReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue (param i32)))
 (import "__aspect" "reportExpectedReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue (param i32 i32)))
 (import "__aspect" "clearActual" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual))
 (import "__aspect" "clearExpected" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected))
 (import "__aspect" "reportTestTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/it (param i32 i32)))
 (import "__aspect" "createReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (import "__aspect" "pushReflectedObjectKey" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey (param i32 i32)))
 (import "__aspect" "pushReflectedObjectValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue (param i32 i32)))
 (import "__aspect" "logReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/log/logReflectedValue (param i32)))
 (import "__aspect" "reportGroupTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/describe (param i32 i32)))
 (import "rtrace" "onstore" (func $~onstore (param i32 i32 i32 i32) (result i32)))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/util/math/log_tail (mut f64) (f64.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs (mut i32) (i32.const 0))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 38716))
 (global $~started (mut i32) (i32.const 0))
 (table $0 13 funcref)
 (elem $0 (i32.const 1) $assembly/ndarray/NdArray<f64>#reshape~anonymous|0 $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|0 $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|1 $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|2 $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|3 $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|4~checkOrderTranspose $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|4 $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|5~add $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|5~fn|0 $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|5 $start:assembly/__tests__/ndarray.aspect~anonymous|0 $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0)
 (export "__ignoreLogs" (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "_start" (func $~start))
 (export "__call" (func $export:node_modules/@as-pect/assembly/assembly/internal/call/__call))
 (func $~lib/rt/itcms/initLazy (param $0 i32) (result i32)
  local.get $0
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 8
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $0
  i32.store offset=8
  local.get $0
 )
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  i32.const 1504
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1712
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 7296
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1904
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 7456
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1312
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5680
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6736
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 1376
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $0 i32) (param $1 i32)
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const -4
  i32.and
  i32.or
  local.set $1
  local.get $0
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#set:next (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  local.get $1
  i32.or
  local.set $1
  local.get $0
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#linkTo (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.load offset=8
  local.set $3
  local.get $1
  local.get $2
  i32.or
  local.set $2
  local.get $0
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $2
  i32.store offset=4
  local.get $0
  i32.const 8
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $0
  call $~lib/rt/itcms/Object#set:next
  local.get $1
  i32.const 8
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $0
  i32.store offset=8
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/rt/itcms/iter
  local.get $0
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1376
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  block $__inlined_func$~lib/rt/itcms/Object#unlink
   local.get $0
   i32.load offset=4
   i32.const -4
   i32.and
   local.tee $1
   i32.eqz
   if
    i32.const 0
    local.get $0
    i32.const 38716
    i32.lt_u
    local.get $0
    i32.load offset=8
    select
    i32.eqz
    if
     i32.const 0
     i32.const 1376
     i32.const 127
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    br $__inlined_func$~lib/rt/itcms/Object#unlink
   end
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 1376
    i32.const 131
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 8
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   call $~lib/rt/itcms/Object#set:next
  end
  global.get $~lib/rt/itcms/toSpace
  local.set $1
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   i32.const 22144
   i32.load
   local.get $2
   i32.lt_u
   if
    i32.const 1504
    i32.const 1568
    i32.const 22
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.const 3
   i32.shl
   i32.const 22148
   i32.add
   i32.load
   i32.const 32
   i32.and
  end
  local.set $2
  local.get $0
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $2
  select
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1648
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1648
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $2
   i32.const 1073741820
   local.get $2
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $3
   local.get $2
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $3
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1648
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $5
  local.get $1
  i32.load offset=4
  local.tee $4
  if
   local.get $4
   i32.const 8
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $5
   i32.store offset=8
  end
  local.get $5
  if
   local.get $5
   i32.const 4
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $4
   i32.store offset=4
  end
  local.get $2
  local.get $3
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load offset=96
  local.get $1
  i32.eq
  if
   local.get $2
   local.get $3
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   local.get $0
   i32.add
   i32.const 96
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $5
   i32.store offset=96
   local.get $5
   i32.eqz
   if
    local.get $3
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    local.tee $1
    i32.load offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $2
    local.get $1
    i32.const 4
    i32.const 4
    i32.const 1
    call $~onstore
    local.get $2
    i32.store offset=4
    local.get $2
    i32.eqz
    if
     local.get $0
     i32.load
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     local.set $1
     local.get $0
     i32.const 0
     i32.const 4
     i32.const 1
     call $~onstore
     local.get $1
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1648
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1648
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.set $3
   local.get $1
   i32.const 0
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $3
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $1
   i32.load
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1648
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.set $3
   local.get $1
   i32.const 0
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $3
   i32.store
  end
  local.get $2
  i32.const 2
  i32.or
  local.set $2
  local.get $4
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $2
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1648
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  i32.const 4
  i32.add
  i32.add
  local.get $4
  i32.ne
  if
   i32.const 0
   i32.const 1648
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $2
   i32.const 1073741820
   local.get $2
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1648
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $5
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load offset=96
  local.set $3
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 8
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $3
  if
   local.get $3
   i32.const 4
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $1
   i32.store offset=4
  end
  local.get $2
  local.get $5
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.const 96
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store offset=96
  local.get $0
  i32.load
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  local.set $1
  local.get $0
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store
  local.get $5
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  local.tee $0
  i32.load offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  local.set $1
  local.get $0
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 1648
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load offset=1568
  local.tee $4
  if
   local.get $1
   local.get $4
   i32.const 4
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1648
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $4
   local.get $1
   i32.const 16
   i32.sub
   i32.eq
   if
    local.get $4
    i32.load
    local.set $3
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1648
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $3
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  local.set $3
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $3
  i32.store
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 8
  i32.const 4
  i32.const 1
  call $~onstore
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 4
  i32.add
  i32.add
  local.tee $2
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  i32.const 2
  i32.store
  local.get $0
  i32.const 1568
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  i32.const 38716
  call $~lib/rt/rtrace/oninit
  memory.size
  local.tee $1
  i32.const 0
  i32.le_s
  if (result i32)
   i32.const 1
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 38720
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  i32.const 0
  i32.store
  i32.const 38720
  i32.const 1568
  i32.const 4
  i32.const 1
  call $~onstore
  i32.const 0
  i32.store offset=1568
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 38720
    i32.add
    i32.const 4
    i32.const 4
    i32.const 1
    call $~onstore
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $1
      local.get $0
      i32.const 4
      i32.shl
      i32.add
      i32.const 2
      i32.shl
      i32.const 38720
      i32.add
      i32.const 96
      i32.const 4
      i32.const 1
      call $~onstore
      i32.const 0
      i32.store offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 38720
  i32.const 40292
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 38720
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     global.get $~lib/rt/itcms/toSpace
     local.get $0
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $0
      i32.load offset=4
      i32.const 3
      i32.and
      local.get $1
      i32.ne
      if
       local.get $0
       local.get $1
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 38716
      i32.lt_u
      if
       local.get $0
       i32.load
       local.tee $2
       if
        local.get $2
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      global.get $~lib/rt/itcms/toSpace
      local.get $0
      i32.ne
      if
       local.get $0
       i32.load offset=4
       i32.const 3
       i32.and
       local.get $1
       i32.ne
       if
        local.get $0
        local.get $1
        call $~lib/rt/itcms/Object#set:color
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 1376
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 38716
    i32.lt_u
    if
     local.get $0
     i32.const 4
     i32.const 4
     i32.const 1
     call $~onstore
     i32.const 0
     i32.store offset=4
     local.get $0
     i32.const 8
     i32.const 4
     i32.const 1
     call $~onstore
     i32.const 0
     i32.store offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     local.tee $0
     i32.const 38716
     i32.ge_u
     if
      global.get $~lib/rt/tlsf/ROOT
      i32.eqz
      if
       call $~lib/rt/tlsf/initialize
      end
      global.get $~lib/rt/tlsf/ROOT
      local.get $0
      i32.const 4
      i32.sub
      local.set $2
      local.get $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if (result i32)
       i32.const 1
      else
       local.get $2
       i32.load
       i32.const 1
       i32.and
      end
      if
       i32.const 0
       i32.const 1648
       i32.const 559
       i32.const 3
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      call $~lib/rt/rtrace/onfree
      local.get $2
      i32.load
      i32.const 1
      i32.or
      local.set $0
      local.get $2
      i32.const 0
      i32.const 4
      i32.const 1
      call $~onstore
      local.get $0
      i32.store
      local.get $2
      call $~lib/rt/tlsf/insertBlock
     end
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   local.tee $0
   i32.const 4
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $0
   i32.store offset=4
   global.get $~lib/rt/itcms/toSpace
   local.set $0
   global.get $~lib/rt/itcms/toSpace
   i32.const 8
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $0
   i32.store offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   local.get $1
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $2
   local.get $1
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1648
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   local.get $0
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1648
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1312
   i32.const 1648
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 12
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $1
  i32.const 12
  i32.le_u
  select
  local.tee $3
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   memory.size
   local.tee $1
   i32.const 4
   local.get $0
   i32.load offset=1568
   local.get $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   i32.const 1
   i32.const 27
   local.get $3
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   local.get $3
   i32.add
   local.get $3
   local.get $3
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $2
   local.get $1
   local.get $2
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $2
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1648
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $1
  i32.load
  i32.const -4
  i32.and
  local.get $3
  i32.lt_u
  if
   i32.const 0
   i32.const 1648
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $1
  i32.load
  local.set $4
  local.get $3
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1648
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const -4
  i32.and
  local.get $3
  i32.sub
  local.tee $2
  i32.const 16
  i32.ge_u
  if
   local.get $4
   i32.const 2
   i32.and
   local.get $3
   i32.or
   local.set $4
   local.get $1
   i32.const 0
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $4
   i32.store
   local.get $2
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   local.set $2
   local.get $3
   local.get $1
   i32.const 4
   i32.add
   i32.add
   local.tee $3
   i32.const 0
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $2
   i32.store
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $4
   i32.const -2
   i32.and
   local.set $0
   local.get $1
   i32.const 0
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $0
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $0
   i32.load
   i32.const -3
   i32.and
   local.set $2
   local.get $0
   i32.const 0
   i32.const 4
   i32.const 1
   call $~onstore
   local.get $2
   i32.store
  end
  local.get $1
  call $~lib/rt/rtrace/onalloc
  local.get $1
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $~lib/util/memory/memset|inlined.0
   local.get $1
   i32.eqz
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   local.get $1
   i32.add
   local.set $2
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8
   local.get $2
   i32.const 1
   i32.sub
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8
   local.get $1
   i32.const 2
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 1
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8 offset=1
   local.get $0
   i32.const 2
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 2
   i32.sub
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8
   local.get $2
   i32.const 3
   i32.sub
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8
   local.get $1
   i32.const 6
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 3
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8 offset=3
   local.get $2
   i32.const 4
   i32.sub
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store8
   local.get $1
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   local.get $0
   i32.sub
   i32.const 3
   i32.and
   local.tee $2
   i32.add
   local.tee $0
   local.get $1
   local.get $2
   i32.sub
   i32.const -4
   i32.and
   local.tee $1
   i32.add
   local.set $2
   local.get $0
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $2
   i32.const 4
   i32.sub
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $1
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 12
   i32.sub
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $2
   i32.const 8
   i32.sub
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $1
   i32.const 24
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=24
   local.get $2
   i32.const 28
   i32.sub
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $2
   i32.const 24
   i32.sub
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $2
   i32.const 20
   i32.sub
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $2
   i32.const 16
   i32.sub
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $0
   local.get $0
   i32.const 4
   i32.and
   i32.const 24
   i32.add
   local.tee $2
   i32.add
   local.set $0
   local.get $1
   local.get $2
   i32.sub
   local.set $1
   loop $while-continue|0
    local.get $1
    i32.const 32
    i32.ge_u
    if
     local.get $0
     i32.const 0
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store
     local.get $0
     i32.const 8
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store offset=8
     local.get $0
     i32.const 16
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store offset=16
     local.get $0
     i32.const 24
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store offset=24
     local.get $1
     i32.const 32
     i32.sub
     local.set $1
     local.get $0
     i32.const 32
     i32.add
     local.set $0
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 1312
   i32.const 1376
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    local.tee $2
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    local.get $2
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 16
  i32.add
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  i32.const 12
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store offset=12
  local.get $2
  i32.const 16
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $0
  i32.store offset=16
  local.get $2
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  local.get $0
  call $~lib/memory/memory.fill
  local.get $1
 )
 (func $~lib/util/memory/memcpy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  loop $while-continue|0
   local.get $1
   i32.const 3
   i32.and
   i32.const 0
   local.get $2
   select
   if
    local.get $0
    local.tee $3
    i32.const 1
    i32.add
    local.set $0
    local.get $3
    i32.const 0
    i32.const 1
    i32.const 0
    call $~onstore
    local.get $1
    local.tee $3
    i32.const 1
    i32.add
    local.set $1
    local.get $3
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.const 3
  i32.and
  i32.eqz
  if
   loop $while-continue|1
    local.get $2
    i32.const 16
    i32.ge_u
    if
     local.get $0
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.load
     i32.store
     local.get $0
     i32.const 4
     i32.add
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.load offset=4
     i32.store
     local.get $0
     i32.const 8
     i32.add
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.load offset=8
     i32.store
     local.get $0
     i32.const 12
     i32.add
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.load offset=12
     i32.store
     local.get $1
     i32.const 16
     i32.add
     local.set $1
     local.get $0
     i32.const 16
     i32.add
     local.set $0
     local.get $2
     i32.const 16
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
   local.get $2
   i32.const 8
   i32.and
   if
    local.get $0
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.load offset=4
    i32.store
    local.get $1
    i32.const 8
    i32.add
    local.set $1
    local.get $0
    i32.const 8
    i32.add
    local.set $0
   end
   local.get $2
   i32.const 4
   i32.and
   if
    local.get $0
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.load
    i32.store
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    local.get $0
    i32.const 4
    i32.add
    local.set $0
   end
   local.get $2
   i32.const 2
   i32.and
   if
    local.get $0
    i32.const 0
    i32.const 2
    i32.const 0
    call $~onstore
    local.get $1
    i32.load16_u
    i32.store16
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $2
   i32.const 1
   i32.and
   if
    local.get $0
    i32.const 0
    i32.const 1
    i32.const 0
    call $~onstore
    local.get $1
    i32.load8_u
    i32.store8
   end
   return
  end
  local.get $2
  i32.const 32
  i32.ge_u
  if
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       local.get $0
       i32.const 3
       i32.and
       i32.const 1
       i32.sub
       br_table $case0|2 $case1|2 $case2|2 $break|2
      end
      local.get $1
      i32.load
      local.set $4
      local.get $0
      i32.const 1
      i32.add
      local.set $3
      local.get $0
      i32.const 0
      i32.const 1
      i32.const 0
      call $~onstore
      local.get $1
      i32.const 1
      i32.add
      local.set $5
      local.get $1
      i32.load8_u
      i32.store8
      local.get $3
      i32.const 1
      i32.add
      local.set $1
      local.get $3
      i32.const 0
      i32.const 1
      i32.const 0
      call $~onstore
      local.get $5
      i32.const 1
      i32.add
      local.set $3
      local.get $5
      i32.load8_u
      i32.store8
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      local.get $1
      i32.const 0
      i32.const 1
      i32.const 0
      call $~onstore
      local.get $3
      i32.const 1
      i32.add
      local.set $1
      local.get $3
      i32.load8_u
      i32.store8
      local.get $2
      i32.const 3
      i32.sub
      local.set $2
      loop $while-continue|3
       local.get $2
       i32.const 17
       i32.ge_u
       if
        local.get $1
        i32.load offset=1
        local.set $3
        local.get $0
        i32.const 0
        i32.const 4
        i32.const 0
        call $~onstore
        local.get $3
        i32.const 8
        i32.shl
        local.get $4
        i32.const 24
        i32.shr_u
        i32.or
        i32.store
        local.get $1
        i32.load offset=5
        local.set $4
        local.get $0
        i32.const 4
        i32.add
        i32.const 0
        i32.const 4
        i32.const 0
        call $~onstore
        local.get $4
        i32.const 8
        i32.shl
        local.get $3
        i32.const 24
        i32.shr_u
        i32.or
        i32.store
        local.get $1
        i32.load offset=9
        local.set $3
        local.get $0
        i32.const 8
        i32.add
        i32.const 0
        i32.const 4
        i32.const 0
        call $~onstore
        local.get $3
        i32.const 8
        i32.shl
        local.get $4
        i32.const 24
        i32.shr_u
        i32.or
        i32.store
        local.get $1
        i32.load offset=13
        local.set $4
        local.get $0
        i32.const 12
        i32.add
        i32.const 0
        i32.const 4
        i32.const 0
        call $~onstore
        local.get $4
        i32.const 8
        i32.shl
        local.get $3
        i32.const 24
        i32.shr_u
        i32.or
        i32.store
        local.get $1
        i32.const 16
        i32.add
        local.set $1
        local.get $0
        i32.const 16
        i32.add
        local.set $0
        local.get $2
        i32.const 16
        i32.sub
        local.set $2
        br $while-continue|3
       end
      end
      br $break|2
     end
     local.get $1
     i32.load
     local.set $4
     local.get $0
     i32.const 1
     i32.add
     local.set $3
     local.get $0
     i32.const 0
     i32.const 1
     i32.const 0
     call $~onstore
     local.get $1
     i32.const 1
     i32.add
     local.set $5
     local.get $1
     i32.load8_u
     i32.store8
     local.get $3
     i32.const 1
     i32.add
     local.set $0
     local.get $3
     i32.const 0
     i32.const 1
     i32.const 0
     call $~onstore
     local.get $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     loop $while-continue|4
      local.get $2
      i32.const 18
      i32.ge_u
      if
       local.get $1
       i32.load offset=2
       local.set $3
       local.get $0
       i32.const 0
       i32.const 4
       i32.const 0
       call $~onstore
       local.get $3
       i32.const 16
       i32.shl
       local.get $4
       i32.const 16
       i32.shr_u
       i32.or
       i32.store
       local.get $1
       i32.load offset=6
       local.set $4
       local.get $0
       i32.const 4
       i32.add
       i32.const 0
       i32.const 4
       i32.const 0
       call $~onstore
       local.get $4
       i32.const 16
       i32.shl
       local.get $3
       i32.const 16
       i32.shr_u
       i32.or
       i32.store
       local.get $1
       i32.load offset=10
       local.set $3
       local.get $0
       i32.const 8
       i32.add
       i32.const 0
       i32.const 4
       i32.const 0
       call $~onstore
       local.get $3
       i32.const 16
       i32.shl
       local.get $4
       i32.const 16
       i32.shr_u
       i32.or
       i32.store
       local.get $1
       i32.load offset=14
       local.set $4
       local.get $0
       i32.const 12
       i32.add
       i32.const 0
       i32.const 4
       i32.const 0
       call $~onstore
       local.get $4
       i32.const 16
       i32.shl
       local.get $3
       i32.const 16
       i32.shr_u
       i32.or
       i32.store
       local.get $1
       i32.const 16
       i32.add
       local.set $1
       local.get $0
       i32.const 16
       i32.add
       local.set $0
       local.get $2
       i32.const 16
       i32.sub
       local.set $2
       br $while-continue|4
      end
     end
     br $break|2
    end
    local.get $1
    i32.load
    local.set $4
    local.get $0
    local.tee $3
    i32.const 1
    i32.add
    local.set $0
    local.get $3
    i32.const 0
    i32.const 1
    i32.const 0
    call $~onstore
    local.get $1
    local.tee $3
    i32.const 1
    i32.add
    local.set $1
    local.get $3
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    loop $while-continue|5
     local.get $2
     i32.const 19
     i32.ge_u
     if
      local.get $1
      i32.load offset=3
      local.set $3
      local.get $0
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $3
      i32.const 24
      i32.shl
      local.get $4
      i32.const 8
      i32.shr_u
      i32.or
      i32.store
      local.get $1
      i32.load offset=7
      local.set $4
      local.get $0
      i32.const 4
      i32.add
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $4
      i32.const 24
      i32.shl
      local.get $3
      i32.const 8
      i32.shr_u
      i32.or
      i32.store
      local.get $1
      i32.load offset=11
      local.set $3
      local.get $0
      i32.const 8
      i32.add
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $3
      i32.const 24
      i32.shl
      local.get $4
      i32.const 8
      i32.shr_u
      i32.or
      i32.store
      local.get $1
      i32.load offset=15
      local.set $4
      local.get $0
      i32.const 12
      i32.add
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $4
      i32.const 24
      i32.shl
      local.get $3
      i32.const 8
      i32.shr_u
      i32.or
      i32.store
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      local.get $0
      i32.const 16
      i32.add
      local.set $0
      local.get $2
      i32.const 16
      i32.sub
      local.set $2
      br $while-continue|5
     end
    end
   end
  end
  local.get $2
  i32.const 16
  i32.and
  if
   local.get $0
   i32.const 1
   i32.add
   local.set $3
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $1
   i32.const 1
   i32.add
   local.set $4
   local.get $1
   i32.load8_u
   i32.store8
   local.get $3
   i32.const 1
   i32.add
   local.set $0
   local.get $3
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.load8_u
   i32.store8
   local.get $4
   i32.const 1
   i32.add
   local.set $1
  end
  local.get $2
  i32.const 8
  i32.and
  if
   local.get $0
   i32.const 1
   i32.add
   local.set $3
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $1
   i32.const 1
   i32.add
   local.set $4
   local.get $1
   i32.load8_u
   i32.store8
   local.get $3
   i32.const 1
   i32.add
   local.set $0
   local.get $3
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.load8_u
   i32.store8
   local.get $4
   i32.const 1
   i32.add
   local.set $1
  end
  local.get $2
  i32.const 4
  i32.and
  if
   local.get $0
   i32.const 1
   i32.add
   local.set $3
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $1
   i32.const 1
   i32.add
   local.set $4
   local.get $1
   i32.load8_u
   i32.store8
   local.get $3
   i32.const 1
   i32.add
   local.set $0
   local.get $3
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.const 1
   i32.add
   local.set $3
   local.get $4
   i32.load8_u
   i32.store8
   local.get $0
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $3
   i32.const 1
   i32.add
   local.set $4
   local.get $3
   i32.load8_u
   i32.store8
   local.get $1
   i32.const 1
   i32.add
   local.set $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.load8_u
   i32.store8
   local.get $4
   i32.const 1
   i32.add
   local.set $1
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $0
   i32.const 1
   i32.add
   local.set $3
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $1
   i32.const 1
   i32.add
   local.set $4
   local.get $1
   i32.load8_u
   i32.store8
   local.get $3
   i32.const 1
   i32.add
   local.set $0
   local.get $3
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $4
   i32.load8_u
   i32.store8
   local.get $4
   i32.const 1
   i32.add
   local.set $1
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~onstore
   local.get $1
   i32.load8_u
   i32.store8
  end
 )
 (func $~lib/memory/memory.copy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $2
   local.set $3
   local.get $0
   local.get $1
   i32.eq
   br_if $~lib/util/memory/memmove|inlined.0
   local.get $1
   local.get $0
   i32.sub
   local.get $3
   i32.sub
   i32.const 0
   local.get $3
   i32.const 1
   i32.shl
   i32.sub
   i32.le_u
   if
    local.get $0
    local.get $1
    local.get $3
    call $~lib/util/memory/memcpy
    br $~lib/util/memory/memmove|inlined.0
   end
   local.get $0
   local.get $1
   i32.lt_u
   if
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $0
      i32.const 7
      i32.and
      if
       local.get $3
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       local.get $0
       local.tee $2
       i32.const 1
       i32.add
       local.set $0
       local.get $2
       i32.const 0
       i32.const 1
       i32.const 0
       call $~onstore
       local.get $1
       local.tee $2
       i32.const 1
       i32.add
       local.set $1
       local.get $2
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $3
      i32.const 8
      i32.ge_u
      if
       local.get $0
       i32.const 0
       i32.const 8
       i32.const 0
       call $~onstore
       local.get $1
       i64.load
       i64.store
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $3
     if
      local.get $0
      local.tee $2
      i32.const 1
      i32.add
      local.set $0
      local.get $2
      i32.const 0
      i32.const 1
      i32.const 0
      call $~onstore
      local.get $1
      local.tee $2
      i32.const 1
      i32.add
      local.set $1
      local.get $2
      i32.load8_u
      i32.store8
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $while-continue|2
     end
    end
   else
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $0
      local.get $3
      i32.add
      i32.const 7
      i32.and
      if
       local.get $3
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       local.get $0
       i32.add
       i32.const 0
       i32.const 1
       i32.const 0
       call $~onstore
       local.get $1
       local.get $3
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $3
      i32.const 8
      i32.ge_u
      if
       local.get $3
       i32.const 8
       i32.sub
       local.tee $3
       local.get $0
       i32.add
       i32.const 0
       i32.const 8
       i32.const 0
       call $~onstore
       local.get $1
       local.get $3
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $3
     if
      local.get $3
      i32.const 1
      i32.sub
      local.tee $3
      local.get $0
      i32.add
      i32.const 0
      i32.const 1
      i32.const 0
      call $~onstore
      local.get $1
      local.get $3
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load offset=8
  local.tee $3
  local.get $2
  i32.shr_u
  local.get $1
  i32.lt_u
  if
   i32.const 1073741820
   local.get $2
   i32.shr_u
   local.get $1
   i32.lt_u
   if
    i32.const 1712
    i32.const 1760
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/rt/itcms/__renew
    local.get $3
    i32.const 1
    i32.shl
    local.tee $3
    i32.const 1073741820
    local.get $3
    i32.const 1073741820
    i32.lt_u
    select
    local.tee $3
    local.get $1
    i32.const 8
    local.get $1
    i32.const 8
    i32.gt_u
    select
    local.get $2
    i32.shl
    local.tee $1
    local.get $1
    local.get $3
    i32.lt_u
    select
    local.tee $3
    local.get $0
    i32.load
    local.tee $2
    i32.const 20
    i32.sub
    local.tee $4
    i32.load
    i32.const -4
    i32.and
    i32.const 16
    i32.sub
    i32.le_u
    if
     local.get $4
     i32.const 16
     i32.const 4
     i32.const 1
     call $~onstore
     local.get $3
     i32.store offset=16
     local.get $2
     local.set $1
     br $__inlined_func$~lib/rt/itcms/__renew
    end
    local.get $3
    local.get $4
    i32.load offset=12
    call $~lib/rt/itcms/__new
    local.tee $1
    local.get $2
    local.get $3
    local.get $4
    i32.load offset=16
    local.tee $4
    local.get $3
    local.get $4
    i32.lt_u
    select
    call $~lib/memory/memory.copy
   end
   local.get $1
   local.get $2
   i32.ne
   if
    local.get $0
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.store
    local.get $0
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.store offset=4
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   local.get $0
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<i32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.get $1
  i32.le_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1504
    i32.const 1760
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   call $~lib/array/ensureCapacity
   local.get $0
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=12
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=12
  local.get $1
  i32.le_u
  if
   i32.const 1504
   i32.const 1760
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/array/Array<i32>#reverse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.tee $4
  i32.const 1
  i32.gt_u
  if
   local.get $4
   i32.const 1
   i32.shr_u
   local.set $3
   local.get $4
   i32.const 1
   i32.sub
   local.set $7
   loop $while-continue|0
    local.get $1
    local.get $3
    i32.lt_u
    if
     local.get $7
     local.get $1
     i32.sub
     i32.const 2
     i32.shl
     local.get $2
     i32.add
     local.set $6
     local.get $1
     i32.const 2
     i32.shl
     local.get $2
     i32.add
     local.tee $4
     i32.load
     local.set $5
     local.get $4
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $6
     i32.load
     i32.store
     local.get $6
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $5
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
  end
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  local.get $1
  i32.le_u
  if
   i32.const 1504
   i32.const 1808
   i32.const 133
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64> (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 16
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $1
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  f64.const 0
  f64.store offset=8
  local.get $1
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  local.get $0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe (param $0 i32) (param $1 f64) (param $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $0
  f64.load offset=8
  local.tee $3
  f64.eq
  local.set $4
  local.get $0
  i32.load
  local.set $0
  i32.const 1
  global.set $~argumentsLength
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<f64>@varargs
  local.tee $5
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $5
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<f64>@varargs
  local.tee $5
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $5
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $0
  local.get $4
  i32.xor
  i32.eqz
  if
   local.get $2
   i32.const 2496
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
 )
 (func $assembly/utils/arange<f64>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  block $2of2
   block $0of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of2 $2of2 $2of2 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.lt_s
   if
    local.get $0
    local.set $1
    i32.const 0
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.const 3
   i32.const 3
   i32.const 3536
   call $~lib/rt/__newArray
   local.tee $4
   i32.store
   loop $while-continue|0
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $2
     local.tee $3
     i32.const 1
     i32.add
     local.set $2
     local.get $4
     i32.load offset=12
     local.get $3
     i32.le_u
     if
      local.get $3
      i32.const 0
      i32.lt_s
      if
       i32.const 1504
       i32.const 1760
       i32.const 130
       i32.const 22
       call $~lib/builtins/abort
       unreachable
      end
      local.get $4
      local.get $3
      i32.const 1
      i32.add
      local.tee $6
      i32.const 3
      call $~lib/array/ensureCapacity
      local.get $4
      i32.const 12
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $6
      i32.store offset=12
     end
     local.get $0
     f64.convert_i32_s
     local.set $5
     local.get $4
     i32.load offset=4
     local.get $3
     i32.const 3
     i32.shl
     i32.add
     i32.const 0
     i32.const 8
     i32.const 0
     call $~onstore
     local.get $5
     f64.store
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   local.get $4
   i32.load offset=12
   i32.const 1
   i32.eq
   i32.const 0
   i32.and
   if (result i32)
    local.get $4
    i32.load offset=12
    i32.eqz
    if
     i32.const 1504
     i32.const 1760
     i32.const 114
     i32.const 42
     call $~lib/builtins/abort
     unreachable
    end
    local.get $4
    i32.load offset=4
    f64.load
    i32.trunc_f64_s
    call $~lib/staticarray/StaticArray<f64>#constructor
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 1
    i32.const 2
    i32.const 4
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $0
    i32.load offset=4
    i32.store offset=12
    local.get $4
    i32.load offset=12
   else
    local.get $4
    call $~lib/staticarray/StaticArray.fromArray<f64>
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 1
    i32.const 2
    i32.const 4
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $0
    i32.load offset=4
    i32.store offset=8
    local.get $4
    i32.load offset=12
   end
   local.set $2
   local.get $0
   i32.load offset=4
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/utils/shapeSize (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 1
  local.set $1
  loop $for-loop|0
   local.get $0
   i32.load offset=12
   local.get $2
   i32.gt_s
   if
    local.get $0
    local.get $2
    call $~lib/array/Array<i32>#__get
    local.get $1
    i32.mul
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
 )
 (func $assembly/ndarray/NdArray<f64>#reshape~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const -1
  i32.eq
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store
  local.get $0
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=12
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $5
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $5
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 5260
    i32.add
    i64.load32_u
    local.set $3
    local.get $5
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 5260
    i32.add
    i64.load32_u
    local.set $4
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    local.get $0
    i32.add
    i32.const 0
    i32.const 8
    i32.const 0
    call $~onstore
    local.get $4
    i64.const 32
    i64.shl
    local.get $3
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $1
   i32.const 100
   i32.rem_u
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
   i32.const 2
   i32.shl
   i32.const 5260
   i32.add
   i32.load
   local.set $5
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   local.get $0
   i32.add
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $1
   i32.const 2
   i32.shl
   i32.const 5260
   i32.add
   i32.load
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   local.get $0
   i32.add
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
  else
   local.get $1
   i32.const 48
   i32.add
   local.set $1
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   local.get $0
   i32.add
   i32.const 0
   i32.const 2
   i32.const 0
   call $~onstore
   local.get $1
   i32.store16
  end
 )
 (func $~lib/util/number/itoa_buffered<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 0
  i32.lt_s
  local.tee $2
  if
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
   local.get $0
   i32.const 0
   i32.const 2
   i32.const 0
   call $~onstore
   i32.const 45
   i32.store16
  end
  local.get $1
  i32.const 10
  i32.lt_u
  if
   local.get $2
   i32.const 1
   i32.shl
   local.get $0
   i32.add
   i32.const 0
   i32.const 2
   i32.const 0
   call $~onstore
   local.get $1
   i32.const 48
   i32.or
   i32.store16
   local.get $2
   i32.const 1
   i32.add
   return
  end
  local.get $0
  local.get $1
  local.get $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.get $2
  i32.add
  local.tee $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
 )
 (func $~lib/array/Array<i32>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=4
  local.set $6
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinIntegerArray<i32>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $5
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 6832
     local.set $0
     br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
    end
    local.get $5
    i32.eqz
    if
     local.get $6
     i32.load
     call $~lib/util/number/itoa32
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
    end
    local.get $5
    i32.const 7036
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $4
    i32.const 11
    i32.add
    i32.mul
    i32.const 11
    i32.add
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|0
     local.get $0
     local.get $5
     i32.lt_s
     if
      local.get $2
      i32.const 1
      i32.shl
      local.get $1
      i32.add
      local.get $0
      i32.const 2
      i32.shl
      local.get $6
      i32.add
      i32.load
      call $~lib/util/number/itoa_buffered<i32>
      local.get $2
      i32.add
      local.set $2
      local.get $4
      if
       local.get $2
       i32.const 1
       i32.shl
       local.get $1
       i32.add
       i32.const 7040
       local.get $4
       i32.const 1
       i32.shl
       call $~lib/memory/memory.copy
       local.get $2
       local.get $4
       i32.add
       local.set $2
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
    local.get $2
    i32.const 1
    i32.shl
    local.get $1
    i32.add
    local.get $5
    i32.const 2
    i32.shl
    local.get $6
    i32.add
    i32.load
    call $~lib/util/number/itoa_buffered<i32>
    local.get $2
    i32.add
    local.tee $0
    local.get $3
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22332
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 0
     i32.store
     i32.const 0
     local.get $0
     i32.const 0
     local.get $0
     i32.const 0
     i32.gt_s
     select
     local.tee $0
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $4
     local.get $0
     local.get $4
     i32.lt_s
     select
     local.tee $0
     local.get $0
     i32.const 0
     i32.gt_s
     select
     i32.const 1
     i32.shl
     local.set $3
     block $__inlined_func$~lib/string/String#substring
      i32.const 0
      local.get $0
      local.get $0
      i32.const 0
      i32.lt_s
      select
      i32.const 1
      i32.shl
      local.tee $0
      local.get $3
      i32.sub
      local.tee $2
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 6832
       local.set $0
       br $__inlined_func$~lib/string/String#substring
      end
      i32.const 0
      local.get $4
      i32.const 1
      i32.shl
      local.get $0
      i32.eq
      local.get $3
      select
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $1
       local.set $0
       br $__inlined_func$~lib/string/String#substring
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $2
      i32.const 1
      call $~lib/rt/itcms/__new
      local.tee $0
      i32.store
      local.get $0
      local.get $1
      local.get $3
      i32.add
      local.get $2
      call $~lib/memory/memory.copy
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   local.get $0
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/ndarray/NdArray<f64>> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 8
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $0
  i32.eqz
  local.get $1
  i32.eqz
  i32.xor
  if
   i32.const 0
   return
  end
  block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<i32>> (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   if
    i32.const 38736
    i32.const 38784
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $3
   i32.load offset=12
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 7184
   i32.store
   local.get $5
   i32.const 1
   i32.and
   if
    i32.const 7184
    i32.const 2496
    i32.const 2
    i32.const 19
    call $~lib/builtins/abort
    unreachable
   end
   block $folding-inner1
    loop $for-loop|0
     local.get $4
     local.get $5
     i32.lt_s
     if
      local.get $0
      local.get $3
      i32.load offset=4
      local.tee $6
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $7
      i32.eq
      local.get $1
      local.get $4
      i32.const 1
      i32.add
      i32.const 2
      i32.shl
      local.get $6
      i32.add
      i32.load
      local.tee $6
      i32.eq
      i32.and
      local.get $0
      local.get $6
      i32.eq
      local.get $1
      local.get $7
      i32.eq
      i32.and
      i32.or
      br_if $folding-inner1
      local.get $4
      i32.const 2
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    local.get $2
    i32.load offset=12
    local.set $5
    i32.const 0
    local.set $4
    loop $for-loop|1
     local.get $4
     local.get $5
     i32.lt_s
     if
      local.get $0
      local.get $2
      i32.load offset=4
      local.tee $6
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $7
      i32.eq
      local.get $1
      local.get $4
      i32.const 1
      i32.add
      i32.const 2
      i32.shl
      local.get $6
      i32.add
      i32.load
      local.tee $6
      i32.eq
      i32.and
      local.get $0
      local.get $6
      i32.eq
      local.get $1
      local.get $7
      i32.eq
      i32.and
      i32.or
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 2
       br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<i32>>
      end
      local.get $4
      i32.const 2
      i32.add
      local.set $4
      br $for-loop|1
     end
    end
    block $folding-inner0
     local.get $0
     i32.load offset=12
     local.tee $4
     local.get $1
     i32.load offset=12
     i32.ne
     br_if $folding-inner0
     i32.const 0
     local.set $2
     loop $for-loop|2
      local.get $2
      local.get $4
      i32.lt_s
      if
       local.get $2
       i32.const 2
       i32.shl
       local.tee $5
       local.get $0
       i32.load offset=4
       i32.add
       i32.load
       local.get $5
       local.get $1
       i32.load offset=4
       i32.add
       i32.load
       i32.ne
       br_if $folding-inner0
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|2
      end
     end
     local.get $3
     local.get $0
     call $~lib/array/Array<i32>#push
     local.get $3
     local.get $1
     call $~lib/array/Array<i32>#push
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<i32>>
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
  end
 )
 (func $~lib/array/Array<usize>#pop (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   i32.const 7296
   i32.const 1760
   i32.const 291
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  drop
  local.get $0
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=12
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<assembly/ndarray/NdArray<f64>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#eq
  if
   i32.const 1
   return
  end
  local.get $0
  i32.eqz
  local.get $1
  i32.eqz
  i32.xor
  if
   i32.const 0
   return
  end
  block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<assembly/ndarray/NdArray<f64>> (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   if
    i32.const 38736
    i32.const 38784
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   local.get $3
   i32.load offset=12
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 7184
   i32.store
   local.get $5
   i32.const 1
   i32.and
   if
    i32.const 7184
    i32.const 2496
    i32.const 2
    i32.const 19
    call $~lib/builtins/abort
    unreachable
   end
   loop $for-loop|0
    local.get $4
    local.get $5
    i32.lt_s
    if
     local.get $0
     local.get $3
     i32.load offset=4
     local.tee $6
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.eq
     local.get $1
     local.get $4
     i32.const 1
     i32.add
     i32.const 2
     i32.shl
     local.get $6
     i32.add
     i32.load
     local.tee $6
     i32.eq
     i32.and
     local.get $0
     local.get $6
     i32.eq
     local.get $1
     local.get $7
     i32.eq
     i32.and
     i32.or
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<assembly/ndarray/NdArray<f64>>
     end
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $2
   i32.load offset=12
   local.set $5
   i32.const 0
   local.set $4
   loop $for-loop|1
    local.get $4
    local.get $5
    i32.lt_s
    if
     local.get $0
     local.get $2
     i32.load offset=4
     local.tee $6
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.eq
     local.get $1
     local.get $4
     i32.const 1
     i32.add
     i32.const 2
     i32.shl
     local.get $6
     i32.add
     i32.load
     local.tee $6
     i32.eq
     i32.and
     local.get $0
     local.get $6
     i32.eq
     local.get $1
     local.get $7
     i32.eq
     i32.and
     i32.or
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 2
      br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<assembly/ndarray/NdArray<f64>>
     end
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   local.get $2
   local.get $0
   call $~lib/array/Array<i32>#push
   local.get $2
   local.get $1
   call $~lib/array/Array<i32>#push
   i32.const 0
   i32.const 15
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.const 7264
   i32.const 0
   call $~lib/memory/memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   local.get $4
   call $assembly/ndarray/NdArray<f64>#__aspectStrictEquals
   local.tee $4
   if
    local.get $3
    local.get $0
    call $~lib/array/Array<i32>#push
    local.get $3
    local.get $1
    call $~lib/array/Array<i32>#push
   end
   local.get $2
   call $~lib/array/Array<usize>#pop
   local.get $2
   call $~lib/array/Array<usize>#pop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   i32.eqz
   i32.eqz
  end
 )
 (func $~lib/map/Map<usize,i32>#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  local.get $1
  local.tee $2
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  i32.const 15
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  i32.const 13
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  i32.const 16
  i32.shr_u
  local.get $0
  i32.xor
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  block $__inlined_func$~lib/map/Map<usize,i32>#find
   loop $while-continue|0
    local.get $0
    if
     local.get $0
     local.tee $1
     i32.load offset=8
     local.tee $0
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $2
      local.get $1
      i32.load
      i32.eq
     end
     br_if $__inlined_func$~lib/map/Map<usize,i32>#find
     local.get $0
     i32.const -2
     i32.and
     local.set $0
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 7456
   i32.const 7520
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=4
 )
 (func $~lib/map/Map<usize,i32>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $6
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  i32.store offset=4
  local.get $0
  i32.load offset=8
  local.tee $5
  local.get $0
  i32.load offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $7
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $5
   local.get $7
   i32.ne
   if
    local.get $5
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $5
     i32.load
     local.set $8
     local.get $2
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $8
     i32.store
     local.get $5
     i32.load offset=4
     local.set $9
     local.get $2
     i32.const 4
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $9
     i32.store offset=4
     local.get $8
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $8
     local.get $8
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $8
     local.get $8
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $8
     local.get $8
     i32.const 16
     i32.shr_u
     i32.xor
     local.get $1
     i32.and
     i32.const 2
     i32.shl
     local.get $4
     i32.add
     local.tee $8
     i32.load
     local.set $9
     local.get $2
     i32.const 8
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $9
     i32.store offset=8
     local.get $8
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $2
     i32.store
     local.get $2
     i32.const 12
     i32.add
     local.set $2
    end
    local.get $5
    i32.const 12
    i32.add
    local.set $5
    br $while-continue|0
   end
  end
  local.get $0
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $0
  local.set $2
  local.get $4
  if
   local.get $2
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=4
  local.get $2
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $6
  i32.store offset=12
  local.get $0
  i32.load offset=20
  local.set $1
  local.get $0
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 5
  i32.const 16
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $1
  i32.const 4
  i32.const 1
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store8 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.const 0
  call $~onstore
  local.get $0
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load8_u offset=4
  local.tee $4
  i32.const 0
  i32.ne
  local.get $1
  i32.const 0
  i32.ne
  i32.eq
  local.set $3
  local.get $0
  i32.load
  local.set $0
  i32.const 1
  global.set $~argumentsLength
  local.get $4
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool>@varargs
  local.tee $4
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $4
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool>@varargs
  local.tee $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $1
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $0
  local.get $3
  i32.xor
  i32.eqz
  if
   local.get $2
   i32.const 2496
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 8
  i32.const 17
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 8
  i32.const 18
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $0
  i32.load offset=4
  local.tee $4
  i32.eq
  local.set $3
  local.get $0
  i32.load
  local.set $0
  i32.const 1
  global.set $~argumentsLength
  local.get $4
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>@varargs
  local.tee $4
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $4
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>@varargs
  local.tee $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $1
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $0
  local.get $3
  i32.xor
  i32.eqz
  if
   local.get $2
   i32.const 2496
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
 )
 (func $~lib/array/Array<i32>#fill (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  i32.const 0
  local.get $0
  i32.load offset=12
  local.tee $3
  local.get $3
  i32.const 0
  i32.gt_s
  select
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $2
    i32.const 2
    i32.shl
    local.get $4
    i32.add
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|5~add (param $0 f64) (param $1 f64) (result f64)
  local.get $0
  local.get $1
  f64.add
 )
 (func $~lib/math/NativeMath.pow (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  local.get $1
  f64.abs
  f64.const 2
  f64.le
  if
   local.get $1
   f64.const 2
   f64.eq
   if
    local.get $0
    local.get $0
    f64.mul
    return
   end
   local.get $1
   f64.const 0.5
   f64.eq
   if
    local.get $0
    f64.sqrt
    f64.abs
    f64.const inf
    local.get $0
    f64.const -inf
    f64.ne
    select
    return
   end
   local.get $1
   f64.const -1
   f64.eq
   if
    f64.const 1
    local.get $0
    f64.div
    return
   end
   local.get $1
   f64.const 1
   f64.eq
   if
    local.get $0
    return
   end
   local.get $1
   f64.const 0
   f64.eq
   if
    f64.const 1
    return
   end
  end
  block $~lib/util/math/pow_lut|inlined.0 (result f64)
   local.get $1
   i64.reinterpret_f64
   local.tee $12
   i64.const 52
   i64.shr_u
   local.tee $6
   i64.const 2047
   i64.and
   i64.const 958
   i64.sub
   i64.const 128
   i64.ge_u
   local.get $0
   i64.reinterpret_f64
   local.tee $2
   i64.const 52
   i64.shr_u
   local.tee $4
   i64.const 1
   i64.sub
   i64.const 2046
   i64.ge_u
   i32.or
   if
    local.get $12
    i64.const 1
    i64.shl
    i64.const 1
    i64.sub
    i64.const -9007199254740993
    i64.ge_u
    if
     f64.const 1
     local.get $12
     i64.const 1
     i64.shl
     i64.eqz
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const nan:0x8000000000000
     local.get $2
     i64.const 4607182418800017408
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     local.get $0
     local.get $1
     f64.add
     local.get $12
     i64.const 1
     i64.shl
     i64.const -9007199254740992
     i64.gt_u
     local.get $2
     i64.const 1
     i64.shl
     i64.const -9007199254740992
     i64.gt_u
     i32.or
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const nan:0x8000000000000
     local.get $2
     i64.const 1
     i64.shl
     i64.const 9214364837600034816
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const 0
     local.get $12
     i64.const 63
     i64.shr_u
     i64.eqz
     local.get $2
     i64.const 1
     i64.shl
     i64.const 9214364837600034816
     i64.lt_u
     i32.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     local.get $1
     local.get $1
     f64.mul
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $2
    i64.const 1
    i64.shl
    i64.const 1
    i64.sub
    i64.const -9007199254740993
    i64.ge_u
    if
     f64.const 1
     local.get $0
     local.get $0
     f64.mul
     local.tee $0
     f64.neg
     local.get $0
     local.get $2
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     if (result i32)
      block $~lib/util/math/checkint|inlined.0 (result i32)
       i32.const 0
       local.get $12
       i64.const 52
       i64.shr_u
       i64.const 2047
       i64.and
       local.tee $2
       i64.const 1023
       i64.lt_u
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 2
       local.get $2
       i64.const 1075
       i64.gt_u
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 0
       i64.const 1
       i64.const 1075
       local.get $2
       i64.sub
       i64.shl
       local.tee $2
       i64.const 1
       i64.sub
       local.get $12
       i64.and
       i64.const 0
       i64.ne
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 1
       local.get $2
       local.get $12
       i64.and
       i64.const 0
       i64.ne
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 2
      end
      i32.const 1
      i32.eq
     else
      i32.const 0
     end
     select
     local.tee $0
     f64.div
     local.get $0
     local.get $12
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     select
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $2
    i64.const 63
    i64.shr_u
    i32.wrap_i64
    if
     block $~lib/util/math/checkint|inlined.1 (result i32)
      i32.const 0
      local.get $12
      i64.const 52
      i64.shr_u
      i64.const 2047
      i64.and
      local.tee $13
      i64.const 1023
      i64.lt_u
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 2
      local.get $13
      i64.const 1075
      i64.gt_u
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 0
      i64.const 1
      i64.const 1075
      local.get $13
      i64.sub
      i64.shl
      local.tee $13
      i64.const 1
      i64.sub
      local.get $12
      i64.and
      i64.const 0
      i64.ne
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 1
      local.get $12
      local.get $13
      i64.and
      i64.const 0
      i64.ne
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 2
     end
     local.tee $3
     i32.eqz
     if
      local.get $0
      local.get $0
      f64.sub
      local.tee $0
      local.get $0
      f64.div
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $4
     i64.const 2047
     i64.and
     local.set $4
     i32.const 262144
     i32.const 0
     local.get $3
     i32.const 1
     i32.eq
     select
     local.set $5
     local.get $2
     i64.const 9223372036854775807
     i64.and
     local.set $2
    end
    local.get $6
    i64.const 2047
    i64.and
    i64.const 958
    i64.sub
    i64.const 128
    i64.ge_u
    if
     f64.const 1
     local.get $2
     i64.const 4607182418800017408
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const 1
     local.get $6
     i64.const 2047
     i64.and
     i64.const 958
     i64.lt_u
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const inf
     f64.const 0
     local.get $6
     i64.const 2048
     i64.lt_u
     local.get $2
     i64.const 4607182418800017408
     i64.gt_u
     i32.eq
     select
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $0
    f64.const 4503599627370496
    f64.mul
    i64.reinterpret_f64
    i64.const 9223372036854775807
    i64.and
    i64.const 234187180623265792
    i64.sub
    local.get $2
    local.get $4
    i64.eqz
    select
    local.set $2
   end
   local.get $2
   local.get $2
   i64.const 4604531861337669632
   i64.sub
   local.tee $2
   i64.const -4503599627370496
   i64.and
   i64.sub
   local.tee $4
   i64.const 2147483648
   i64.add
   i64.const -4294967296
   i64.and
   f64.reinterpret_i64
   local.tee $7
   local.get $2
   i64.const 45
   i64.shr_u
   i64.const 127
   i64.and
   i32.wrap_i64
   i32.const 5
   i32.shl
   i32.const 15760
   i32.add
   local.tee $3
   f64.load
   local.tee $8
   f64.mul
   f64.const 1
   f64.sub
   local.set $9
   local.get $2
   i64.const 52
   i64.shr_s
   f64.convert_i64_s
   local.tee $14
   f64.const 0.6931471805598903
   f64.mul
   local.get $3
   f64.load offset=16
   f64.add
   local.tee $0
   local.get $9
   local.get $4
   f64.reinterpret_i64
   local.get $7
   f64.sub
   local.get $8
   f64.mul
   local.tee $7
   f64.add
   local.tee $15
   f64.add
   local.set $16
   local.get $15
   local.get $15
   f64.const -0.5
   f64.mul
   local.tee $8
   f64.mul
   local.set $17
   local.get $16
   local.get $9
   local.get $9
   f64.const -0.5
   f64.mul
   local.tee $18
   f64.mul
   local.tee $9
   f64.add
   local.tee $10
   local.get $10
   local.get $14
   f64.const 5.497923018708371e-14
   f64.mul
   local.get $3
   f64.load offset=24
   f64.add
   local.get $0
   local.get $16
   f64.sub
   local.get $15
   f64.add
   f64.add
   local.get $7
   local.get $8
   local.get $18
   f64.add
   f64.mul
   f64.add
   local.get $16
   local.get $10
   f64.sub
   local.get $9
   f64.add
   f64.add
   local.get $15
   local.get $17
   f64.mul
   local.get $15
   f64.const 0.5000000000000007
   f64.mul
   f64.const -0.6666666666666679
   f64.add
   local.get $17
   local.get $15
   f64.const -0.6666666663487739
   f64.mul
   f64.const 0.7999999995323976
   f64.add
   local.get $17
   local.get $15
   f64.const 1.0000415263675542
   f64.mul
   f64.const -1.142909628459501
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.tee $0
   f64.add
   local.tee $7
   f64.sub
   local.get $0
   f64.add
   global.set $~lib/util/math/log_tail
   block $~lib/util/math/exp_inline|inlined.0 (result f64)
    local.get $12
    i64.const -134217728
    i64.and
    f64.reinterpret_i64
    local.tee $0
    local.get $7
    i64.reinterpret_f64
    i64.const -134217728
    i64.and
    f64.reinterpret_i64
    local.tee $8
    f64.mul
    local.tee $9
    i64.reinterpret_f64
    local.tee $2
    i64.const 52
    i64.shr_u
    i32.wrap_i64
    i32.const 2047
    i32.and
    local.tee $3
    i32.const 969
    i32.sub
    i32.const 63
    i32.ge_u
    if
     f64.const -1
     f64.const 1
     local.get $5
     select
     local.get $3
     i32.const 969
     i32.sub
     i32.const -2147483648
     i32.ge_u
     br_if $~lib/util/math/exp_inline|inlined.0
     drop
     local.get $2
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     if (result f64)
      f64.const -1.2882297539194267e-231
      f64.const 1.2882297539194267e-231
      local.get $5
      select
      f64.const 1.2882297539194267e-231
      f64.mul
     else
      f64.const -3105036184601417870297958e207
      f64.const 3105036184601417870297958e207
      local.get $5
      select
      f64.const 3105036184601417870297958e207
      f64.mul
     end
     local.get $3
     i32.const 1033
     i32.ge_u
     br_if $~lib/util/math/exp_inline|inlined.0
     drop
     i32.const 0
     local.set $3
    end
    local.get $9
    f64.const 184.6649652337873
    f64.mul
    f64.const 6755399441055744
    f64.add
    local.tee $10
    i64.reinterpret_f64
    local.tee $2
    i64.const 127
    i64.and
    i64.const 1
    i64.shl
    i32.wrap_i64
    i32.const 3
    i32.shl
    i32.const 19856
    i32.add
    local.tee $11
    i64.load offset=8
    local.get $5
    i64.extend_i32_u
    local.get $2
    i64.add
    i64.const 45
    i64.shl
    i64.add
    local.set $4
    local.get $9
    local.get $10
    f64.const 6755399441055744
    f64.sub
    local.tee $9
    f64.const -0.005415212348111709
    f64.mul
    f64.add
    local.get $9
    f64.const -1.2864023111638346e-14
    f64.mul
    f64.add
    local.get $1
    local.get $0
    f64.sub
    local.get $8
    f64.mul
    local.get $1
    local.get $7
    local.get $8
    f64.sub
    global.get $~lib/util/math/log_tail
    f64.add
    f64.mul
    f64.add
    f64.add
    local.tee $0
    local.get $0
    f64.mul
    local.set $1
    local.get $11
    f64.load
    local.get $0
    f64.add
    local.get $1
    local.get $0
    f64.const 0.16666666666665886
    f64.mul
    f64.const 0.49999999999996786
    f64.add
    f64.mul
    f64.add
    local.get $1
    local.get $1
    f64.mul
    local.get $0
    f64.const 0.008333335853059549
    f64.mul
    f64.const 0.0416666808410674
    f64.add
    f64.mul
    f64.add
    local.set $0
    local.get $3
    i32.eqz
    if
     block $~lib/util/math/specialcase|inlined.0 (result f64)
      local.get $2
      i64.const 2147483648
      i64.and
      i64.eqz
      if
       local.get $4
       i64.const 4544132024016830464
       i64.sub
       f64.reinterpret_i64
       local.tee $1
       local.get $1
       local.get $0
       f64.mul
       f64.add
       f64.const 5486124068793688683255936e279
       f64.mul
       br $~lib/util/math/specialcase|inlined.0
      end
      local.get $4
      i64.const 4602678819172646912
      i64.add
      local.tee $2
      f64.reinterpret_i64
      local.tee $1
      local.get $1
      local.get $0
      f64.mul
      f64.add
      local.tee $7
      f64.abs
      f64.const 1
      f64.lt
      if (result f64)
       f64.const 1
       local.get $7
       f64.copysign
       local.tee $8
       local.get $7
       f64.add
       local.tee $9
       local.get $8
       local.get $9
       f64.sub
       local.get $7
       f64.add
       local.get $1
       local.get $7
       f64.sub
       local.get $1
       local.get $0
       f64.mul
       f64.add
       f64.add
       f64.add
       local.get $8
       f64.sub
       local.tee $0
       f64.const 0
       f64.eq
       if (result f64)
        local.get $2
        i64.const -9223372036854775808
        i64.and
        f64.reinterpret_i64
       else
        local.get $0
       end
      else
       local.get $7
      end
      f64.const 2.2250738585072014e-308
      f64.mul
     end
     br $~lib/util/math/exp_inline|inlined.0
    end
    local.get $4
    f64.reinterpret_i64
    local.tee $1
    local.get $1
    local.get $0
    f64.mul
    f64.add
   end
  end
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|5~fn|0 (param $0 f64) (result f64)
  local.get $0
  local.get $0
  call $~lib/math/NativeMath.pow
 )
 (func $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs (param $0 i32)
  local.get $0
  i32.const 0
  i32.ne
  global.set $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
 )
 (func $~lib/staticarray/StaticArray<~lib/array/Array<i32>>~visit (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  local.get $0
  i32.add
  local.set $2
  loop $while-continue|0
   local.get $0
   local.get $2
   i32.lt_u
   if
    local.get $0
    i32.load
    local.tee $1
    if
     local.get $1
     call $byn-split-outlined-A$~lib/rt/itcms/__visit
    end
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner3
   block $folding-inner2
    block $folding-inner1
     block $invalid
      block $~lib/array/Array<~lib/array/Array<i32>>
       block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>
        block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>
         block $~lib/staticarray/StaticArray<i64>
          block $~lib/staticarray/StaticArray<~lib/string/String>
           block $~lib/map/Map<usize,i32>
            block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>
             block $~lib/staticarray/StaticArray<~lib/array/Array<i32>>
              block $~lib/staticarray/StaticArray<f64>
               block $assembly/ndarray/NdArray<f64>
                block $~lib/arraybuffer/ArrayBufferView
                 block $~lib/string/String
                  block $~lib/arraybuffer/ArrayBuffer
                   local.get $0
                   i32.const 8
                   i32.sub
                   i32.load
                   br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $folding-inner3 $folding-inner3 $assembly/ndarray/NdArray<f64> $~lib/staticarray/StaticArray<f64> $~lib/staticarray/StaticArray<~lib/array/Array<i32>> $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64> $~lib/map/Map<usize,i32> $folding-inner1 $folding-inner1 $folding-inner2 $~lib/staticarray/StaticArray<~lib/string/String> $folding-inner3 $~lib/staticarray/StaticArray<i64> $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool> $folding-inner2 $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32> $~lib/array/Array<~lib/array/Array<i32>> $folding-inner1 $folding-inner1 $folding-inner1 $invalid
                  end
                  return
                 end
                 return
                end
                local.get $0
                i32.load
                local.tee $0
                if
                 local.get $0
                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                end
                return
               end
               local.get $0
               i32.load
               local.tee $1
               if
                local.get $1
                call $byn-split-outlined-A$~lib/rt/itcms/__visit
               end
               local.get $0
               i32.load offset=4
               local.tee $1
               if
                local.get $1
                call $byn-split-outlined-A$~lib/rt/itcms/__visit
               end
               local.get $0
               i32.load offset=8
               local.tee $1
               if
                local.get $1
                call $byn-split-outlined-A$~lib/rt/itcms/__visit
               end
               local.get $0
               i32.load offset=20
               local.tee $0
               if
                local.get $0
                call $byn-split-outlined-A$~lib/rt/itcms/__visit
               end
               return
              end
              return
             end
             local.get $0
             call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>~visit
             return
            end
            return
           end
           local.get $0
           i32.load
           local.tee $1
           if
            local.get $1
            call $byn-split-outlined-A$~lib/rt/itcms/__visit
           end
           local.get $0
           i32.load offset=8
           local.tee $0
           if
            local.get $0
            call $byn-split-outlined-A$~lib/rt/itcms/__visit
           end
           return
          end
          local.get $0
          call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>~visit
          return
         end
         return
        end
        return
       end
       return
      end
      local.get $0
      i32.load offset=4
      local.tee $1
      local.get $0
      i32.load offset=12
      i32.const 2
      i32.shl
      i32.add
      local.set $2
      loop $while-continue|0
       local.get $1
       local.get $2
       i32.lt_u
       if
        local.get $1
        i32.load
        local.tee $3
        if
         local.get $3
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        local.get $1
        i32.const 4
        i32.add
        local.set $1
        br $while-continue|0
       end
      end
      br $folding-inner3
     end
     unreachable
    end
    local.get $0
    i32.load offset=4
    local.tee $0
    if
     local.get $0
     call $byn-split-outlined-A$~lib/rt/itcms/__visit
    end
    return
   end
   local.get $0
   i32.load offset=4
   local.tee $0
   if
    local.get $0
    call $byn-split-outlined-A$~lib/rt/itcms/__visit
   end
   return
  end
  local.get $0
  i32.load
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~start
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  memory.size
  i32.const 16
  i32.shl
  i32.const 38716
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 1424
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 1456
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 1600
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 1056
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 22096
  i32.store offset=4
  i32.const 1056
  i32.const 22096
  call $node_modules/@as-pect/assembly/assembly/internal/Test/describe
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#indices (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=20
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $4
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__get
  local.tee $2
  i32.store offset=4
  local.get $2
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=4
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $4
  i32.load offset=12
  call $~lib/array/Array<i32>#constructor
  local.tee $5
  i32.store offset=8
  i32.const 1
  local.set $2
  loop $for-loop|0
   local.get $5
   i32.load offset=12
   local.get $3
   i32.gt_s
   if
    local.get $3
    if
     local.get $0
     i32.load offset=4
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $4
     i32.store
     local.get $4
     local.get $3
     call $~lib/array/Array<i32>#__get
     local.get $2
     i32.mul
     local.set $2
    end
    local.get $1
    local.get $2
    i32.div_s
    f32.convert_i32_s
    f32.floor
    i32.trunc_f32_s
    local.set $6
    local.get $0
    i32.load offset=4
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $4
    i32.store
    local.get $5
    local.get $3
    local.get $6
    local.get $4
    local.get $3
    call $~lib/array/Array<i32>#__get
    i32.rem_s
    call $~lib/array/Array<i32>#__set
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=20
  local.tee $0
  i32.store offset=16
  local.get $5
  call $~lib/array/Array<i32>#reverse
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__set
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__get
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 24
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store
   local.get $5
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $5
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=4
   local.get $5
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=8
   local.get $5
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=12
   local.get $5
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=16
   local.get $5
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=20
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 1
    i32.const 2
    i32.const 4
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.load offset=4
    i32.store offset=8
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.set $6
    local.get $1
    i32.load offset=4
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $6
    i32.store
   end
   local.get $5
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=4
   local.get $5
   local.set $6
   local.get $1
   if
    local.get $6
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $6
   i32.load offset=4
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load offset=12
   local.set $8
   local.get $2
   if
    local.get $6
    i32.const 8
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $2
    i32.store offset=8
    local.get $2
    if
     local.get $5
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   else
    local.get $8
    call $~lib/array/Array<i32>#constructor
    local.set $1
    local.get $6
    i32.const 8
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $1
    i32.store offset=8
    local.get $1
    if
     local.get $5
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $8
    i32.const 1
    i32.sub
    local.set $2
    i32.const 1
    local.set $1
    loop $for-loop|0
     local.get $2
     i32.const 0
     i32.ge_s
     if
      local.get $5
      i32.load offset=8
      local.set $6
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $6
      i32.store offset=12
      local.get $6
      local.get $2
      local.get $1
      call $~lib/array/Array<i32>#__set
      local.get $5
      i32.load offset=4
      local.set $6
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $6
      i32.store offset=12
      local.get $6
      local.get $2
      call $~lib/array/Array<i32>#__get
      local.get $1
      i32.mul
      local.set $1
      local.get $2
      i32.const 1
      i32.sub
      local.set $2
      br $for-loop|0
     end
    end
   end
   local.get $5
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.store
   local.get $0
   if
    local.get $5
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $5
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=12
   local.get $5
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $8
   i32.store offset=16
   local.get $4
   if
    local.get $4
    local.set $0
   else
    local.get $5
    i32.load
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $0
    i32.store offset=20
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22332
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 0
    i32.store
    local.get $0
    i32.const 268435455
    i32.gt_u
    if
     i32.const 1712
     i32.const 1808
     i32.const 91
     i32.const 60
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $0
    i32.const 2
    i32.shl
    i32.const 7
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $0
    i32.store offset=12
    i32.const 0
    i32.const 2
    i32.const 4
    i32.const 1872
    call $~lib/rt/__newArray
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $2
    i32.store offset=16
    local.get $0
    local.tee $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 2
    i32.shr_u
    local.set $3
    loop $for-loop|02
     local.get $3
     local.get $7
     i32.gt_s
     if
      local.get $7
      i32.const 2
      i32.shl
      local.get $1
      i32.add
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $2
      i32.store
      local.get $2
      if
       local.get $0
       local.get $2
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $7
      i32.const 1
      i32.add
      local.set $7
      br $for-loop|02
     end
    end
   end
   local.get $5
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.store offset=20
   local.get $0
   if
    local.get $5
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $4
   i32.eqz
   if
    i32.const 0
    local.set $2
    loop $for-loop|1
     local.get $5
     i32.load
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.store offset=12
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 3
     i32.shr_u
     local.get $2
     i32.gt_s
     if
      local.get $5
      i32.load offset=20
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $0
      i32.store offset=12
      local.get $5
      local.get $2
      call $assembly/ndarray/NdArray<f64>#indices
      local.set $1
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $1
      i32.store offset=20
      local.get $0
      local.get $2
      local.get $1
      call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__set
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|1
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/ndarray/NdArray<f64>#get (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $1
  i32.load offset=12
  local.set $6
  local.get $0
  i32.load offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store
  local.get $5
  i32.load offset=12
  local.get $6
  i32.ne
  if
   i32.const 2096
   i32.const 2224
   i32.const 55
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  loop $for-loop|0
   local.get $1
   i32.load offset=12
   local.get $2
   i32.gt_s
   if
    local.get $0
    i32.load offset=8
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $5
    i32.store
    local.get $5
    local.get $2
    call $~lib/array/Array<i32>#__get
    local.get $1
    local.get $2
    call $~lib/array/Array<i32>#__get
    i32.mul
    local.get $3
    i32.add
    local.set $3
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store
  local.get $3
  local.get $0
  i32.load offset=12
  i32.add
  local.tee $0
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 1504
   i32.const 1808
   i32.const 118
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 3
  i32.shl
  local.get $1
  i32.add
  f64.load
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<f64> (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 2400
  i32.store
  i32.const 0
  i32.const 8
  i32.const 8
  i32.const 2400
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#set (param $0 i32) (param $1 f64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $2
  i32.load offset=12
  local.set $6
  local.get $0
  i32.load offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store
  local.get $5
  i32.load offset=12
  local.get $6
  i32.ne
  if
   i32.const 2096
   i32.const 2224
   i32.const 70
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  loop $for-loop|0
   local.get $2
   i32.load offset=12
   local.get $3
   i32.gt_s
   if
    local.get $0
    i32.load offset=8
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $5
    i32.store
    local.get $5
    local.get $3
    call $~lib/array/Array<i32>#__get
    local.get $2
    local.get $3
    call $~lib/array/Array<i32>#__get
    i32.mul
    local.get $4
    i32.add
    local.set $4
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store
  local.get $4
  local.get $0
  i32.load offset=12
  i32.add
  local.tee $0
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 1504
   i32.const 1808
   i32.const 133
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 3
  i32.shl
  local.get $2
  i32.add
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  local.get $1
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#transpose (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  local.get $0
  i32.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store
  local.get $0
  i32.load offset=4
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/array/Array<i32>#slice
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=8
  local.get $2
  call $~lib/array/Array<i32>#reverse
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=4
  local.get $0
  i32.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=12
  local.get $3
  call $~lib/array/Array<i32>#slice
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $3
  call $~lib/array/Array<i32>#reverse
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $1
  local.get $2
  local.get $3
  local.get $0
  i32.load offset=12
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#size (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store
  local.get $0
  call $assembly/utils/shapeSize
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#reshape (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2 (result i32)
   block $folding-inner1
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 22332
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.const 8
     i32.const 0
     call $~onstore
     i64.const 0
     i64.store offset=24
     local.get $1
     i32.load offset=12
     i32.eqz
     if
      i32.const 3600
      i32.const 2224
      i32.const 250
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 0
     i32.const 2
     i32.const 4
     i32.const 3712
     call $~lib/rt/__newArray
     local.tee $4
     i32.store
     local.get $1
     i32.load offset=12
     i32.const 1
     i32.eq
     if (result i32)
      local.get $1
      i32.const 0
      call $~lib/array/Array<i32>#__get
      i32.const -1
      i32.eq
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.const 4
      i32.const 0
      call $~onstore
      i32.const 1
      i32.const 2
      i32.const 4
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $4
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $4
      i32.load offset=4
      i32.store offset=8
      local.get $0
      call $assembly/ndarray/NdArray<f64>#size
      local.set $6
      local.get $4
      i32.load offset=4
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $6
      i32.store
      local.get $4
      i32.store
     end
     local.get $1
     i32.load offset=12
     i32.const 1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.const 4
      i32.const 0
      call $~onstore
      i32.const 1
      i32.const 2
      i32.const 4
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $4
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $4
      i32.load offset=4
      i32.store offset=4
      local.get $1
      i32.const 0
      call $~lib/array/Array<i32>#__get
      local.set $6
      local.get $4
      i32.load offset=4
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $6
      i32.store
      local.get $4
      i32.store
     end
     local.get $1
     i32.load offset=12
     i32.const 1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $1
      call $~lib/array/Array<i32>#slice
      local.tee $4
      i32.store
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 3744
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22332
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 0
     i32.const 2
     i32.const 4
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $1
     i32.store
     local.get $4
     i32.load offset=12
     local.set $5
     loop $for-loop|0
      local.get $5
      local.get $4
      i32.load offset=12
      local.tee $6
      local.get $5
      local.get $6
      i32.lt_s
      select
      local.get $3
      i32.gt_s
      if
       local.get $4
       i32.load offset=4
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $6
       i32.const 3
       global.set $~argumentsLength
       local.get $6
       local.get $3
       local.get $4
       i32.const 3744
       i32.load
       call_indirect $0 (type $i32_i32_i32_=>_i32)
       if
        local.get $1
        local.get $6
        call $~lib/array/Array<i32>#push
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.store offset=12
     local.get $1
     i32.load offset=12
     i32.const 1
     i32.gt_s
     if
      i32.const 3776
      i32.const 2224
      i32.const 267
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     local.get $4
     call $assembly/utils/shapeSize
     local.set $1
     loop $for-loop|05
      local.get $4
      i32.load offset=12
      local.get $2
      i32.gt_s
      if
       local.get $4
       local.get $2
       local.get $4
       local.get $2
       call $~lib/array/Array<i32>#__get
       local.tee $3
       i32.const -1
       i32.eq
       if (result i32)
        i32.const 0
        local.get $0
        call $assembly/ndarray/NdArray<f64>#size
        i32.sub
        local.get $1
        i32.div_s
       else
        local.get $3
       end
       call $~lib/array/Array<i32>#__set
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|05
      end
     end
     local.get $0
     call $assembly/ndarray/NdArray<f64>#size
     local.get $4
     call $assembly/utils/shapeSize
     i32.ne
     if
      i32.const 3872
      i32.const 2224
      i32.const 277
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.load offset=4
     local.tee $2
     i32.store offset=8
     local.get $0
     i32.load offset=12
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.load offset=8
     local.tee $6
     i32.store offset=20
     local.get $4
     i32.load offset=12
     local.tee $8
     local.get $2
     i32.load offset=12
     local.tee $9
     i32.eq
     if
      i32.const 1
      local.set $5
      i32.const 0
      local.set $3
      loop $for-loop|1
       local.get $3
       local.get $8
       i32.lt_s
       if
        block $for-break1
         local.get $2
         local.get $3
         call $~lib/array/Array<i32>#__get
         local.get $4
         local.get $3
         call $~lib/array/Array<i32>#__get
         i32.ne
         if
          i32.const 0
          local.set $5
          br $for-break1
         end
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-loop|1
        end
       end
      end
      local.get $5
      if
       local.get $0
       i32.load
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.const 4
       i32.const 0
       call $~onstore
       local.get $0
       i32.store offset=24
       local.get $0
       local.get $2
       local.get $6
       local.get $1
       i32.const 0
       call $assembly/ndarray/NdArray<f64>#constructor
       br $folding-inner2
      end
     else
      local.get $9
      i32.const 1
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 28
       i32.const 4
       i32.const 0
       call $~onstore
       local.get $8
       call $~lib/array/Array<i32>#constructor
       local.tee $2
       i32.store offset=28
       local.get $8
       i32.const 1
       i32.sub
       local.set $3
       i32.const 1
       local.set $5
       loop $for-loop|2
        local.get $3
        i32.const 0
        i32.ge_s
        if
         local.get $2
         local.get $3
         local.get $5
         call $~lib/array/Array<i32>#__set
         local.get $4
         local.get $3
         call $~lib/array/Array<i32>#__get
         local.get $5
         i32.mul
         local.set $5
         local.get $3
         i32.const 1
         i32.sub
         local.set $3
         br $for-loop|2
        end
       end
       i32.const 0
       local.set $3
       loop $for-loop|3
        local.get $3
        local.get $8
        i32.lt_s
        if
         local.get $2
         local.get $3
         call $~lib/array/Array<i32>#__get
         i32.const 0
         i32.lt_s
         if
          local.get $1
          local.get $4
          local.get $3
          call $~lib/array/Array<i32>#__get
          i32.const 1
          i32.sub
          local.get $2
          local.get $3
          call $~lib/array/Array<i32>#__get
          i32.mul
          i32.sub
          local.set $1
         end
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-loop|3
        end
       end
       br $folding-inner1
      end
     end
     local.get $9
     f64.convert_i32_s
     local.get $8
     f64.convert_i32_s
     f64.min
     local.set $7
     i32.const 1
     local.set $5
     i32.const 0
     local.set $3
     loop $for-loop|4
      local.get $7
      local.get $3
      f64.convert_i32_s
      f64.gt
      if
       block $for-break4
        local.get $2
        local.get $3
        call $~lib/array/Array<i32>#__get
        local.get $4
        local.get $3
        call $~lib/array/Array<i32>#__get
        i32.ne
        if
         i32.const 0
         local.set $5
         br $for-break4
        end
        local.get $3
        i32.const 1
        i32.add
        local.set $3
        br $for-loop|4
       end
      end
     end
     local.get $5
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 28
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $8
      call $~lib/array/Array<i32>#constructor
      local.tee $2
      i32.store offset=28
      i32.const 0
      local.set $3
      loop $for-loop|5
       local.get $3
       local.get $8
       i32.lt_s
       if
        local.get $2
        local.get $3
        local.get $6
        local.get $3
        call $~lib/array/Array<i32>#__get
        local.tee $5
        i32.const 1
        local.get $5
        select
        call $~lib/array/Array<i32>#__set
        local.get $3
        i32.const 1
        i32.add
        local.set $3
        br $for-loop|5
       end
      end
      br $folding-inner1
     end
     local.get $0
     local.get $4
     call $assembly/ndarray/NdArray<f64>#reshape
     global.get $~lib/memory/__stack_pointer
     i32.const 32
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    i32.const 38736
    i32.const 38784
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.store offset=24
   local.get $0
   local.get $4
   local.get $2
   local.get $1
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#geti (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#indices
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#get
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#seti (param $0 i32) (param $1 i32) (param $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#indices
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store
  local.get $0
  local.get $2
  local.get $1
  call $assembly/ndarray/NdArray<f64>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|0
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9
  i32.const 3
  i32.const 3
  i32.const 1216
  call $~lib/rt/__newArray
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  call $~lib/staticarray/StaticArray.fromArray<f64>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 2032
  call $~lib/rt/__newArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $2
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  local.tee $0
  i32.store offset=12
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 2064
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=20
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 2288
  i32.store offset=8
  local.get $1
  f64.const 4
  i32.const 2288
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 2640
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=20
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 2672
  i32.store offset=8
  local.get $1
  f64.const 8
  i32.const 2672
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 2816
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=8
  local.get $0
  f64.const 666
  local.get $1
  call $assembly/ndarray/NdArray<f64>#set
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 2848
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=20
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 2880
  i32.store offset=8
  local.get $0
  f64.const 666
  i32.const 2880
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9
  i32.const 3
  i32.const 3
  i32.const 3024
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  call $~lib/staticarray/StaticArray.fromArray<f64>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 3120
  call $~lib/rt/__newArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $2
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  local.tee $0
  i32.store offset=28
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 3152
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=20
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 3184
  i32.store offset=8
  local.get $1
  f64.const 8
  i32.const 3184
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  local.get $0
  call $assembly/ndarray/NdArray<f64>#transpose
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=8
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 3344
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=20
  local.get $0
  local.get $1
  call $assembly/ndarray/NdArray<f64>#get
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 3376
  i32.store offset=8
  local.get $0
  f64.const 6
  i32.const 3376
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 1
  global.set $~argumentsLength
  i32.const 9
  call $assembly/utils/arange<f64>@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 3568
  call $~lib/rt/__newArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=4
  local.get $1
  local.get $2
  call $assembly/ndarray/NdArray<f64>#reshape
  local.tee $0
  i32.store offset=32
  local.get $0
  i32.const 5
  call $assembly/ndarray/NdArray<f64>#geti
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 3984
  i32.store offset=8
  local.get $1
  f64.const 5
  i32.const 3984
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  local.get $0
  i32.const 5
  f64.const 666
  call $assembly/ndarray/NdArray<f64>#seti
  local.get $0
  i32.const 5
  call $assembly/ndarray/NdArray<f64>#geti
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4112
  i32.store offset=8
  local.get $1
  f64.const 666
  i32.const 4112
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  call $assembly/ndarray/NdArray<f64>#transpose
  local.tee $0
  i32.store offset=36
  local.get $0
  i32.const 5
  call $assembly/ndarray/NdArray<f64>#geti
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4256
  i32.store offset=8
  local.get $1
  f64.const 7
  i32.const 4256
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  local.get $0
  i32.const 5
  f64.const 1313
  call $assembly/ndarray/NdArray<f64>#seti
  local.get $0
  i32.const 5
  call $assembly/ndarray/NdArray<f64>#geti
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4112
  i32.store offset=8
  local.get $0
  f64.const 1313
  i32.const 4112
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#copy (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.load
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 3
   i32.shr_u
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.tee $2
   i32.const 3
   i32.const 3
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store
   local.get $3
   i32.load offset=4
   local.get $1
   local.get $2
   i32.const 3
   i32.shl
   call $~lib/memory/memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=16
   local.get $3
   call $~lib/staticarray/StaticArray.fromArray<f64>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   local.get $0
   i32.load offset=4
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=16
   local.get $1
   call $~lib/array/Array<i32>#slice
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=4
   local.get $0
   i32.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=16
   local.get $1
   call $~lib/array/Array<i32>#slice
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=8
   local.get $0
   i32.load offset=12
   local.set $1
   local.get $0
   i32.load offset=20
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.store offset=12
   local.get $2
   local.get $3
   local.get $4
   local.get $1
   local.get $0
   call $assembly/ndarray/NdArray<f64>#constructor
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<i32>#toString (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 7040
  i32.store
  local.get $0
  call $~lib/array/Array<i32>#join
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#shapeCheck (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  local.get $0
  i32.load offset=4
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store
  local.get $3
  i32.load offset=12
  local.set $3
  local.get $1
  i32.load offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store
  local.get $5
  i32.load offset=12
  local.get $3
  i32.eq
  local.set $3
  block $folding-inner0
   local.get $2
   if
    local.get $3
    i32.eqz
    br_if $folding-inner0
   else
    local.get $3
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.load offset=4
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.store
     local.get $0
     i32.load offset=12
     call $~lib/util/number/itoa32
     local.tee $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.load offset=4
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.store
     local.get $1
     i32.load offset=12
     call $~lib/util/number/itoa32
     local.tee $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 5008
     i32.store
     i32.const 5008
     i32.const 1
     local.get $0
     call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 5008
     i32.store
     i32.const 5008
     i32.const 3
     local.get $1
     call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 5008
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 6832
     i32.store offset=12
     i32.const 5008
     i32.const 5004
     i32.load
     i32.const 2
     i32.shr_u
     call $~lib/util/string/joinStringArray
     i32.const 2224
     i32.const 512
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   end
   loop $for-loop|0
    local.get $1
    i32.load offset=4
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $5
    i32.store
    local.get $5
    i32.load offset=12
    local.get $4
    i32.gt_s
    if
     local.get $0
     i32.load offset=4
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $3
     i32.store
     local.get $3
     local.get $4
     call $~lib/array/Array<i32>#__get
     local.set $3
     local.get $1
     i32.load offset=4
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $5
     i32.store
     local.get $5
     local.get $4
     call $~lib/array/Array<i32>#__get
     local.get $3
     i32.eq
     local.set $3
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $2
   if
    local.get $3
    i32.eqz
    br_if $folding-inner0
   else
    local.get $3
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.load offset=4
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.store
     local.get $0
     call $~lib/array/Array<i32>#toString
     local.tee $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.load offset=4
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $1
     i32.store
     local.get $1
     call $~lib/array/Array<i32>#toString
     local.tee $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 6992
     i32.store
     i32.const 6992
     i32.const 1
     local.get $0
     call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 6992
     i32.store
     i32.const 6992
     i32.const 3
     local.get $1
     call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 6992
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 6832
     i32.store offset=12
     i32.const 6992
     i32.const 6988
     i32.load
     i32.const 2
     i32.shr_u
     call $~lib/util/string/joinStringArray
     i32.const 2224
     i32.const 525
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/ndarray/NdArray<f64>#eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  block $folding-inner0
   local.get $0
   local.get $1
   i32.const 1
   call $assembly/ndarray/NdArray<f64>#shapeCheck
   i32.eqz
   br_if $folding-inner0
   loop $for-loop|0
    local.get $0
    i32.load
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $3
    i32.store
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.get $2
    i32.gt_s
    if
     local.get $0
     local.get $2
     call $assembly/ndarray/NdArray<f64>#geti
     local.get $1
     local.get $2
     call $assembly/ndarray/NdArray<f64>#geti
     f64.ne
     br_if $folding-inner0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/staticarray/StaticArray<f64>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $3
  i32.load offset=12
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 7184
  i32.store
  local.get $7
  i32.const 1
  i32.and
  if
   i32.const 7184
   i32.const 2496
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
  block $folding-inner1
   loop $for-loop|0
    local.get $4
    local.get $7
    i32.lt_s
    if
     local.get $0
     local.get $3
     i32.load offset=4
     local.tee $8
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $9
     i32.eq
     local.get $1
     local.get $4
     i32.const 1
     i32.add
     i32.const 2
     i32.shl
     local.get $8
     i32.add
     i32.load
     local.tee $8
     i32.eq
     i32.and
     local.get $0
     local.get $8
     i32.eq
     local.get $1
     local.get $9
     i32.eq
     i32.and
     i32.or
     br_if $folding-inner1
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $2
   i32.load offset=12
   local.set $7
   i32.const 0
   local.set $4
   loop $for-loop|1
    local.get $4
    local.get $7
    i32.lt_s
    if
     local.get $0
     local.get $2
     i32.load offset=4
     local.tee $8
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $9
     i32.eq
     local.get $1
     local.get $4
     i32.const 1
     i32.add
     i32.const 2
     i32.shl
     local.get $8
     i32.add
     i32.load
     local.tee $8
     i32.eq
     i32.and
     local.get $0
     local.get $8
     i32.eq
     local.get $1
     local.get $9
     i32.eq
     i32.and
     i32.or
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 2
      return
     end
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   block $folding-inner0
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $4
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    i32.ne
    br_if $folding-inner0
    i32.const 0
    local.set $2
    loop $for-loop|2
     local.get $2
     local.get $4
     i32.lt_s
     if
      block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<f64> (result i32)
       i32.const 1
       local.get $0
       local.get $2
       i32.const 3
       i32.shl
       local.tee $7
       i32.add
       f64.load
       local.tee $5
       local.get $1
       local.get $7
       i32.add
       f64.load
       local.tee $6
       f64.eq
       br_if $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<f64>
       drop
       i32.const 1
       local.get $5
       local.get $5
       f64.ne
       local.get $6
       local.get $6
       f64.ne
       i32.and
       br_if $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<f64>
       drop
       i32.const 0
      end
      i32.eqz
      br_if $folding-inner0
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|2
     end
    end
    local.get $3
    local.get $0
    call $~lib/array/Array<i32>#push
    local.get $3
    local.get $1
    call $~lib/array/Array<i32>#push
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/staticarray/StaticArray<~lib/array/Array<i32>>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  local.get $3
  i32.load offset=12
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 7184
  i32.store
  local.get $5
  i32.const 1
  i32.and
  if
   i32.const 7184
   i32.const 2496
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
  block $folding-inner1
   loop $for-loop|0
    local.get $4
    local.get $5
    i32.lt_s
    if
     local.get $0
     local.get $3
     i32.load offset=4
     local.tee $6
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.eq
     local.get $1
     local.get $4
     i32.const 1
     i32.add
     i32.const 2
     i32.shl
     local.get $6
     i32.add
     i32.load
     local.tee $6
     i32.eq
     i32.and
     local.get $0
     local.get $6
     i32.eq
     local.get $1
     local.get $7
     i32.eq
     i32.and
     i32.or
     br_if $folding-inner1
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $2
   i32.load offset=12
   local.set $5
   i32.const 0
   local.set $4
   loop $for-loop|1
    local.get $4
    local.get $5
    i32.lt_s
    if
     local.get $0
     local.get $2
     i32.load offset=4
     local.tee $6
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.eq
     local.get $1
     local.get $4
     i32.const 1
     i32.add
     i32.const 2
     i32.shl
     local.get $6
     i32.add
     i32.load
     local.tee $6
     i32.eq
     i32.and
     local.get $0
     local.get $6
     i32.eq
     local.get $1
     local.get $7
     i32.eq
     i32.and
     i32.or
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 2
      return
     end
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   block $folding-inner0
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 2
    i32.shr_u
    local.tee $5
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 2
    i32.shr_u
    i32.ne
    br_if $folding-inner0
    i32.const 0
    local.set $4
    loop $for-loop|2
     local.get $4
     local.get $5
     i32.lt_s
     if
      local.get $0
      local.get $4
      i32.const 2
      i32.shl
      local.tee $6
      i32.add
      i32.load
      local.set $7
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $7
      i32.store offset=4
      local.get $1
      local.get $6
      i32.add
      i32.load
      local.set $6
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $6
      i32.store
      local.get $7
      local.get $6
      local.get $2
      local.get $3
      call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<i32>>
      i32.eqz
      br_if $folding-inner0
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|2
     end
    end
    local.get $3
    local.get $0
    call $~lib/array/Array<i32>#push
    local.get $3
    local.get $1
    call $~lib/array/Array<i32>#push
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/ndarray/NdArray<f64>#__aspectStrictEquals (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  block $folding-inner0
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf (result i32)
    i32.const -1
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $7
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf
    drop
    loop $while-continue|0
     local.get $6
     local.get $7
     i32.lt_s
     if
      local.get $6
      local.get $6
      i32.const 3
      i32.shl
      local.get $4
      i32.add
      i64.load
      i64.const 4746553645170950144
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf
      drop
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $while-continue|0
     end
    end
    i32.const -1
   end
   i32.const 0
   i32.ge_s
   if (result i32)
    i32.const 1
   else
    block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/staticarray/StaticArray<f64>> (result i32)
     local.get $0
     i32.load
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $7
     i32.store
     local.get $1
     i32.load
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $6
     i32.store offset=4
     i32.const 1
     local.get $6
     local.get $7
     i32.eq
     br_if $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/staticarray/StaticArray<f64>>
     drop
     i32.const 0
     local.get $7
     i32.eqz
     local.get $6
     i32.eqz
     i32.xor
     br_if $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/staticarray/StaticArray<f64>>
     drop
     local.get $7
     local.get $6
     local.get $2
     local.get $3
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/staticarray/StaticArray<f64>>
    end
   end
   i32.eqz
   br_if $folding-inner0
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf0 (result i32)
    i32.const 0
    local.set $6
    i32.const -1
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $7
    i32.const 0
    local.get $7
    select
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf0
    drop
    loop $while-continue|03
     local.get $6
     local.get $7
     i32.lt_s
     if
      local.get $6
      local.get $6
      i32.const 3
      i32.shl
      local.get $4
      i32.add
      i64.load
      i64.const 4733382941634199552
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf0
      drop
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $while-continue|03
     end
    end
    i32.const -1
   end
   i32.const 0
   i32.ge_s
   if (result i32)
    i32.const 1
   else
    local.get $0
    i32.load offset=4
    local.set $7
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $7
    i32.store
    local.get $1
    i32.load offset=4
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $6
    i32.store offset=4
    local.get $7
    local.get $6
    local.get $2
    local.get $3
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<i32>>
   end
   i32.eqz
   br_if $folding-inner0
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf4 (result i32)
    i32.const 0
    local.set $6
    i32.const -1
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $7
    i32.const 0
    local.get $7
    select
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf4
    drop
    loop $while-continue|07
     local.get $6
     local.get $7
     i32.lt_s
     if
      local.get $6
      local.get $6
      i32.const 3
      i32.shl
      local.get $4
      i32.add
      i64.load
      i64.const 4736823286573301760
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf4
      drop
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $while-continue|07
     end
    end
    i32.const -1
   end
   i32.const 0
   i32.ge_s
   if (result i32)
    i32.const 1
   else
    local.get $0
    i32.load offset=8
    local.set $7
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $7
    i32.store
    local.get $1
    i32.load offset=8
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $6
    i32.store offset=4
    local.get $7
    local.get $6
    local.get $2
    local.get $3
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<i32>>
   end
   i32.eqz
   br_if $folding-inner0
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf8 (result i32)
    i32.const 0
    local.set $6
    i32.const -1
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $7
    i32.const 0
    local.get $7
    select
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf8
    drop
    loop $while-continue|011
     local.get $6
     local.get $7
     i32.lt_s
     if
      local.get $6
      local.get $6
      i32.const 3
      i32.shl
      local.get $4
      i32.add
      i64.load
      i64.const 4733911352903467008
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf8
      drop
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $while-continue|011
     end
    end
    i32.const -1
   end
   i32.const 0
   i32.ge_s
   if (result i32)
    i32.const 1
   else
    local.get $0
    i32.load offset=12
    local.get $1
    i32.load offset=12
    i32.eq
   end
   i32.eqz
   br_if $folding-inner0
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf12 (result i32)
    i32.const 0
    local.set $6
    i32.const -1
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $7
    i32.const 0
    local.get $7
    select
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf12
    drop
    loop $while-continue|015
     local.get $6
     local.get $7
     i32.lt_s
     if
      local.get $6
      local.get $6
      i32.const 3
      i32.shl
      local.get $4
      i32.add
      i64.load
      i64.const 4730768438409035776
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf12
      drop
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $while-continue|015
     end
    end
    i32.const -1
   end
   i32.const 0
   i32.ge_s
   if (result i32)
    i32.const 1
   else
    local.get $0
    i32.load offset=16
    local.get $1
    i32.load offset=16
    i32.eq
   end
   i32.eqz
   br_if $folding-inner0
   i32.const -1
   local.set $6
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf16
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $7
    i32.const 0
    local.get $7
    select
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf16
    loop $while-continue|019
     local.get $5
     local.get $7
     i32.lt_s
     if
      local.get $5
      local.tee $6
      i32.const 3
      i32.shl
      local.get $4
      i32.add
      i64.load
      i64.const 4745348679848689664
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf16
      local.get $6
      i32.const 1
      i32.add
      local.set $5
      br $while-continue|019
     end
    end
    i32.const -1
    local.set $6
   end
   local.get $6
   i32.const 0
   i32.ge_s
   if (result i32)
    i32.const 1
   else
    block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/staticarray/StaticArray<~lib/array/Array<i32>>> (result i32)
     local.get $0
     i32.load offset=20
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $4
     i32.store
     local.get $1
     i32.load offset=20
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.store offset=4
     i32.const 1
     local.get $0
     local.get $4
     i32.eq
     br_if $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/staticarray/StaticArray<~lib/array/Array<i32>>>
     drop
     i32.const 0
     local.get $4
     i32.eqz
     local.get $0
     i32.eqz
     i32.xor
     br_if $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/staticarray/StaticArray<~lib/array/Array<i32>>>
     drop
     local.get $4
     local.get $0
     local.get $2
     local.get $3
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/staticarray/StaticArray<~lib/array/Array<i32>>>
    end
   end
   i32.eqz
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  block $folding-inner0
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7632
    i32.store
    i32.const 1
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 4
    i32.const 1
    i32.const 1
    i32.const 7632
    i32.const 0
    i32.const 0
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.set $1
    br $folding-inner0
   end
   local.get $1
   i32.load
   local.get $1
   i32.load offset=4
   local.get $0
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $2
   local.get $2
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $2
   local.get $2
   i32.const 16
   i32.shr_u
   i32.xor
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $2
   block $__inlined_func$~lib/map/Map<usize,i32>#find
    loop $while-continue|0
     local.get $2
     if
      local.get $2
      i32.load offset=8
      local.tee $3
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $0
       local.get $2
       i32.load
       i32.eq
      end
      br_if $__inlined_func$~lib/map/Map<usize,i32>#find
      local.get $3
      i32.const -2
      i32.and
      local.set $2
      br $while-continue|0
     end
    end
    i32.const 0
    local.set $2
   end
   local.get $2
   if
    local.get $1
    local.get $0
    call $~lib/map/Map<usize,i32>#get
    local.set $1
    br $folding-inner0
   end
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 7632
   i32.store
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   local.get $0
   i32.const 0
   local.get $2
   i32.const 2
   i32.const 1
   i32.const 7632
   local.get $0
   i32.const 0
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.tee $0
   call $~lib/map/Map<usize,i32>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32> (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 7808
  i32.store
  i32.const 1
  i32.const 4
  i32.const 7
  i32.const 7808
  local.get $0
  f64.convert_i32_s
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  block $folding-inner0
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7760
    i32.store
    i32.const 1
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 4
    i32.const 1
    i32.const 4
    i32.const 7760
    i32.const 0
    i32.const 0
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.set $0
    br $folding-inner0
   end
   local.get $1
   i32.load
   local.get $1
   i32.load offset=4
   local.get $0
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $2
   local.get $2
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $2
   local.get $2
   i32.const 16
   i32.shr_u
   i32.xor
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $2
   block $__inlined_func$~lib/map/Map<usize,i32>#find
    loop $while-continue|0
     local.get $2
     if
      local.get $2
      i32.load offset=8
      local.tee $4
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $0
       local.get $2
       i32.load
       i32.eq
      end
      br_if $__inlined_func$~lib/map/Map<usize,i32>#find
      local.get $4
      i32.const -2
      i32.and
      local.set $2
      br $while-continue|0
     end
    end
    i32.const 0
    local.set $2
   end
   local.get $2
   if
    local.get $1
    local.get $0
    call $~lib/map/Map<usize,i32>#get
    local.set $0
    br $folding-inner0
   end
   local.get $0
   i32.load offset=12
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 7760
   i32.store
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   local.get $0
   i32.const 0
   local.get $2
   i32.const 10
   i32.const 4
   i32.const 7760
   i32.const 0
   i32.const 1
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.tee $1
   call $~lib/map/Map<usize,i32>#set
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.gt_s
    if
     local.get $1
     local.get $0
     i32.load offset=4
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     i32.load
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/ndarray/NdArray<f64>#__aspectAddReflectedValueKeyValuePairs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   i32.const -1
   local.set $5
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $7
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf
    loop $while-continue|0
     local.get $4
     local.get $7
     i32.lt_s
     if
      local.get $4
      local.tee $5
      i32.const 3
      i32.shl
      local.get $3
      i32.add
      i64.load
      i64.const 4746553645170950144
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf
      local.get $5
      i32.const 1
      i32.add
      local.set $4
      br $while-continue|0
     end
    end
    i32.const -1
    local.set $5
   end
   local.get $5
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7600
    i32.store
    local.get $1
    i32.const 7600
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
    local.get $0
    i32.load
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $5
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22332
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 0
    i32.store
    block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/staticarray/StaticArray<f64>>
     local.get $5
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      i32.const 7664
      i32.store
      i32.const 1
      i32.const 0
      i32.const 0
      i32.const 0
      i32.const 0
      i32.const 0
      i32.const 4
      i32.const 1
      i32.const 6
      i32.const 7664
      i32.const 0
      i32.const 0
      i32.const 1
      call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
      local.set $4
      br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/staticarray/StaticArray<f64>>
     end
     local.get $2
     i32.load
     local.get $2
     i32.load offset=4
     local.get $5
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $4
     local.get $4
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $4
     local.get $4
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $4
     local.get $4
     i32.const 16
     i32.shr_u
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $4
     block $__inlined_func$~lib/map/Map<usize,i32>#find
      loop $while-continue|00
       local.get $4
       if
        local.get $4
        i32.load offset=8
        local.tee $7
        i32.const 1
        i32.and
        if (result i32)
         i32.const 0
        else
         local.get $5
         local.get $4
         i32.load
         i32.eq
        end
        br_if $__inlined_func$~lib/map/Map<usize,i32>#find
        local.get $7
        i32.const -2
        i32.and
        local.set $4
        br $while-continue|00
       end
      end
      i32.const 0
      local.set $4
     end
     local.get $4
     if
      local.get $2
      local.get $5
      call $~lib/map/Map<usize,i32>#get
      local.set $4
      br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/staticarray/StaticArray<f64>>
     end
     local.get $5
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 3
     i32.shr_u
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 7664
     i32.store
     local.get $2
     local.get $5
     i32.const 0
     i32.const 0
     i32.const 0
     i32.const 0
     local.get $5
     i32.const 0
     local.get $7
     i32.const 10
     i32.const 6
     i32.const 7664
     i32.const 0
     i32.const 1
     i32.const 1
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
     local.tee $4
     call $~lib/map/Map<usize,i32>#set
     loop $for-loop|0
      local.get $6
      local.get $7
      i32.lt_s
      if
       local.get $4
       local.get $6
       i32.const 3
       i32.shl
       local.get $5
       i32.add
       f64.load
       call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<f64>
       call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
       local.get $6
       i32.const 1
       i32.add
       local.set $6
       br $for-loop|0
      end
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.get $4
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
   end
   i32.const 0
   local.set $4
   i32.const -1
   local.set $5
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf0
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $6
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf0
    loop $while-continue|03
     local.get $4
     local.get $6
     i32.lt_s
     if
      local.get $4
      local.tee $5
      i32.const 3
      i32.shl
      local.get $3
      i32.add
      i64.load
      i64.const 4733382941634199552
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf0
      local.get $5
      i32.const 1
      i32.add
      local.set $4
      br $while-continue|03
     end
    end
    i32.const -1
    local.set $5
   end
   local.get $5
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7728
    i32.store
    local.get $1
    i32.const 7728
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
    local.get $0
    i32.load offset=4
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $4
    i32.store
    local.get $1
    local.get $4
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
   end
   i32.const 0
   local.set $4
   i32.const -1
   local.set $5
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf4
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $6
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf4
    loop $while-continue|07
     local.get $4
     local.get $6
     i32.lt_s
     if
      local.get $4
      local.tee $5
      i32.const 3
      i32.shl
      local.get $3
      i32.add
      i64.load
      i64.const 4736823286573301760
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf4
      local.get $5
      i32.const 1
      i32.add
      local.set $4
      br $while-continue|07
     end
    end
    i32.const -1
    local.set $5
   end
   local.get $5
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7840
    i32.store
    local.get $1
    i32.const 7840
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
    local.get $0
    i32.load offset=8
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $4
    i32.store
    local.get $1
    local.get $4
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
   end
   i32.const 0
   local.set $4
   i32.const -1
   local.set $6
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf8
    local.get $3
    local.tee $5
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $3
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf8
    loop $while-continue|011
     local.get $3
     local.get $4
     i32.gt_s
     if
      local.get $4
      local.tee $6
      i32.const 3
      i32.shl
      local.get $5
      i32.add
      i64.load
      i64.const 4733911352903467008
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf8
      local.get $6
      i32.const 1
      i32.add
      local.set $4
      br $while-continue|011
     end
    end
    i32.const -1
    local.set $6
   end
   local.get $6
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7872
    i32.store
    local.get $1
    i32.const 7872
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
    local.get $1
    local.get $0
    i32.load offset=12
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
   end
   i32.const 0
   local.set $4
   i32.const -1
   local.set $3
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf12
    local.get $5
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $6
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf12
    loop $while-continue|015
     local.get $4
     local.get $6
     i32.lt_s
     if
      local.get $4
      local.tee $3
      i32.const 3
      i32.shl
      local.get $5
      i32.add
      i64.load
      i64.const 4730768438409035776
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf12
      local.get $3
      i32.const 1
      i32.add
      local.set $4
      br $while-continue|015
     end
    end
    i32.const -1
    local.set $3
   end
   local.get $3
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7904
    i32.store
    local.get $1
    i32.const 7904
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
    local.get $1
    local.get $0
    i32.load offset=16
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
   end
   i32.const 0
   local.set $4
   i32.const -1
   local.set $3
   block $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf16
    local.get $5
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.tee $6
    i32.eqz
    br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf16
    loop $while-continue|019
     local.get $4
     local.get $6
     i32.lt_s
     if
      local.get $4
      local.tee $3
      i32.const 3
      i32.shl
      local.get $5
      i32.add
      i64.load
      i64.const 4745348679848689664
      i64.eq
      br_if $__inlined_func$~lib/staticarray/StaticArray<i64>#indexOf16
      local.get $3
      i32.const 1
      i32.add
      local.set $4
      br $while-continue|019
     end
    end
    i32.const -1
    local.set $3
   end
   local.get $3
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7936
    i32.store
    local.get $1
    i32.const 7936
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
    local.get $0
    i32.load offset=20
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $4
    i32.store
    i32.const 0
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22332
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 8
    i32.const 0
    call $~onstore
    i64.const 0
    i64.store
    block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/staticarray/StaticArray<~lib/array/Array<i32>>>
     local.get $4
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      i32.const 7984
      i32.store
      i32.const 1
      i32.const 0
      i32.const 0
      i32.const 0
      i32.const 0
      i32.const 0
      i32.const 4
      i32.const 1
      i32.const 7
      i32.const 7984
      i32.const 0
      i32.const 0
      i32.const 1
      call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
      local.set $0
      br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/staticarray/StaticArray<~lib/array/Array<i32>>>
     end
     local.get $2
     i32.load
     local.get $2
     i32.load offset=4
     local.get $4
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $0
     local.get $0
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $0
     local.get $0
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $0
     local.get $0
     i32.const 16
     i32.shr_u
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $0
     block $__inlined_func$~lib/map/Map<usize,i32>#find2
      loop $while-continue|04
       local.get $0
       if
        local.get $0
        i32.load offset=8
        local.tee $5
        i32.const 1
        i32.and
        if (result i32)
         i32.const 0
        else
         local.get $4
         local.get $0
         i32.load
         i32.eq
        end
        br_if $__inlined_func$~lib/map/Map<usize,i32>#find2
        local.get $5
        i32.const -2
        i32.and
        local.set $0
        br $while-continue|04
       end
      end
      i32.const 0
      local.set $0
     end
     local.get $0
     if
      local.get $2
      local.get $4
      call $~lib/map/Map<usize,i32>#get
      local.set $0
      br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/staticarray/StaticArray<~lib/array/Array<i32>>>
     end
     local.get $4
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 2
     i32.shr_u
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 7984
     i32.store
     local.get $2
     local.get $4
     i32.const 0
     i32.const 0
     i32.const 0
     i32.const 0
     local.get $4
     i32.const 0
     local.get $5
     i32.const 10
     i32.const 7
     i32.const 7984
     i32.const 0
     i32.const 1
     i32.const 1
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
     local.tee $0
     call $~lib/map/Map<usize,i32>#set
     loop $for-loop|01
      local.get $3
      local.get $5
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.const 4
       i32.const 0
       call $~onstore
       local.get $3
       i32.const 2
       i32.shl
       local.get $4
       i32.add
       i32.load
       local.tee $6
       i32.store offset=4
       local.get $0
       local.get $6
       local.get $2
       call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>
       call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|01
      end
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.get $0
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/ndarray/NdArray<f64>>#toStrictEqual (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $0
   i32.load offset=4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store
   i32.const 2
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       i32.const 2
       i32.sub
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 0
     i32.const 2
     i32.const 14
     i32.const 7344
     call $~lib/rt/__newArray
     local.tee $4
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 0
    i32.const 2
    i32.const 14
    i32.const 7376
    call $~lib/rt/__newArray
    local.tee $3
    i32.store offset=4
   end
   local.get $5
   local.get $1
   local.get $4
   local.get $3
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<assembly/ndarray/NdArray<f64>>
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   i32.eq
   local.set $3
   local.get $0
   i32.load offset=4
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store
   i32.const 1
   global.set $~argumentsLength
   local.get $4
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/ndarray/NdArray<f64>>@varargs
   local.tee $4
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
   local.get $4
   call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/ndarray/NdArray<f64>>@varargs
   local.tee $1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
   local.get $1
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
   local.get $0
   i32.load
   local.get $3
   i32.xor
   i32.eqz
   if
    local.get $2
    i32.const 2496
    i32.const 2
    i32.const 19
    call $~lib/builtins/abort
    unreachable
   end
   call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|1
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 4
   i32.const 3
   i32.const 3
   i32.const 4528
   call $~lib/rt/__newArray
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   call $~lib/staticarray/StaticArray.fromArray<f64>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4592
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 4
   i32.const 3
   i32.const 3
   i32.const 4624
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   call $~lib/staticarray/StaticArray.fromArray<f64>
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4688
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=8
   local.get $3
   local.get $5
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $3
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 4
   i32.const 3
   i32.const 3
   i32.const 4720
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   call $~lib/staticarray/StaticArray.fromArray<f64>
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4784
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=8
   local.get $4
   local.get $6
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $4
   i32.store offset=28
   local.get $2
   call $assembly/ndarray/NdArray<f64>#copy
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $5
   local.get $3
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#shapeCheck
   drop
   loop $for-loop|0
    local.get $5
    i32.load
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $6
    i32.store
    local.get $6
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.get $1
    i32.gt_s
    if
     local.get $5
     local.get $1
     local.get $5
     local.get $1
     call $assembly/ndarray/NdArray<f64>#geti
     local.get $3
     local.get $1
     call $assembly/ndarray/NdArray<f64>#geti
     f64.add
     call $assembly/ndarray/NdArray<f64>#seti
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=8
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/ndarray/NdArray<f64>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 7072
   i32.store offset=8
   local.get $1
   local.get $4
   i32.const 7072
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/ndarray/NdArray<f64>>#toStrictEqual
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 4
   i32.const 3
   i32.const 3
   i32.const 8080
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   call $~lib/staticarray/StaticArray.fromArray<f64>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 8144
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=8
   local.get $1
   local.get $5
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $4
   i32.store offset=28
   local.get $2
   call $assembly/ndarray/NdArray<f64>#copy
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $5
   local.get $3
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#shapeCheck
   drop
   i32.const 0
   local.set $1
   loop $for-loop|03
    local.get $5
    i32.load
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $6
    i32.store
    local.get $6
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.get $1
    i32.gt_s
    if
     local.get $5
     local.get $1
     local.get $5
     local.get $1
     call $assembly/ndarray/NdArray<f64>#geti
     local.get $3
     local.get $1
     call $assembly/ndarray/NdArray<f64>#geti
     f64.sub
     call $assembly/ndarray/NdArray<f64>#seti
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|03
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=8
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/ndarray/NdArray<f64>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 8176
   i32.store offset=8
   local.get $1
   local.get $4
   i32.const 8176
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/ndarray/NdArray<f64>>#toStrictEqual
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 4
   i32.const 3
   i32.const 3
   i32.const 8304
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   call $~lib/staticarray/StaticArray.fromArray<f64>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 8368
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=8
   local.get $1
   local.get $5
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $4
   i32.store offset=28
   local.get $2
   call $assembly/ndarray/NdArray<f64>#copy
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $5
   local.get $3
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#shapeCheck
   drop
   i32.const 0
   local.set $1
   loop $for-loop|08
    local.get $5
    i32.load
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $6
    i32.store
    local.get $6
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.get $1
    i32.gt_s
    if
     local.get $5
     local.get $1
     local.get $5
     local.get $1
     call $assembly/ndarray/NdArray<f64>#geti
     local.get $3
     local.get $1
     call $assembly/ndarray/NdArray<f64>#geti
     f64.mul
     call $assembly/ndarray/NdArray<f64>#seti
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|08
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=8
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/ndarray/NdArray<f64>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 8400
   i32.store offset=8
   local.get $1
   local.get $4
   i32.const 8400
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/ndarray/NdArray<f64>>#toStrictEqual
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 4
   i32.const 3
   i32.const 3
   i32.const 8528
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   call $~lib/staticarray/StaticArray.fromArray<f64>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 8592
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=8
   local.get $1
   local.get $5
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $1
   i32.store offset=28
   local.get $2
   call $assembly/ndarray/NdArray<f64>#copy
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $2
   local.get $3
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#shapeCheck
   drop
   loop $for-loop|013
    local.get $2
    i32.load
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $4
    i32.store
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 3
    i32.shr_u
    local.get $0
    i32.gt_s
    if
     local.get $2
     local.get $0
     local.get $2
     local.get $0
     call $assembly/ndarray/NdArray<f64>#geti
     local.get $3
     local.get $0
     call $assembly/ndarray/NdArray<f64>#geti
     f64.div
     call $assembly/ndarray/NdArray<f64>#seti
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|013
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=8
   local.get $2
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/ndarray/NdArray<f64>>
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 8624
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 8624
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/ndarray/NdArray<f64>>#toStrictEqual
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/ndarray/NdArray<f64>#ltAll (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#shapeCheck
  drop
  loop $for-loop|0
   local.get $0
   i32.load
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 3
   i32.shr_u
   local.get $2
   i32.gt_s
   if
    local.get $0
    local.get $2
    call $assembly/ndarray/NdArray<f64>#geti
    local.get $1
    local.get $2
    call $assembly/ndarray/NdArray<f64>#geti
    f64.lt
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/ndarray/NdArray<f64>#gtAll (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#shapeCheck
  drop
  loop $for-loop|0
   local.get $0
   i32.load
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 3
   i32.shr_u
   local.get $2
   i32.gt_s
   if
    local.get $0
    local.get $2
    call $assembly/ndarray/NdArray<f64>#geti
    local.get $1
    local.get $2
    call $assembly/ndarray/NdArray<f64>#geti
    f64.gt
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|2
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4
  i32.const 3
  i32.const 3
  i32.const 8864
  call $~lib/rt/__newArray
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  call $~lib/staticarray/StaticArray.fromArray<f64>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=4
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 8928
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $2
  local.get $3
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  local.tee $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  call $~lib/staticarray/StaticArray.fromArray<f64>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 8960
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $0
  local.get $3
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  local.tee $2
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4
  i32.const 3
  i32.const 3
  i32.const 8992
  call $~lib/rt/__newArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=8
  local.get $0
  call $~lib/staticarray/StaticArray.fromArray<f64>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store offset=4
  i32.const 2
  i32.const 2
  i32.const 4
  i32.const 9056
  call $~lib/rt/__newArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  local.tee $0
  i32.store offset=20
  local.get $1
  local.get $2
  call $assembly/ndarray/NdArray<f64>#eq
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9088
  i32.store offset=8
  local.get $3
  i32.const 1
  i32.const 9088
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $1
  local.get $2
  call $assembly/ndarray/NdArray<f64>#eq
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9248
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.const 9248
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $2
  call $assembly/ndarray/NdArray<f64>#transpose
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=28
  local.get $1
  local.get $2
  call $assembly/ndarray/NdArray<f64>#eq
  i32.eqz
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9248
  i32.store offset=8
  local.get $2
  i32.const 1
  i32.const 9248
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $1
  local.get $0
  call $assembly/ndarray/NdArray<f64>#ltAll
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9376
  i32.store offset=8
  local.get $2
  i32.const 1
  i32.const 9376
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $1
  local.get $0
  call $assembly/ndarray/NdArray<f64>#gtAll
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9504
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.const 9504
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $1
  local.get $1
  call $assembly/ndarray/NdArray<f64>#gtAll
  if (result i32)
   i32.const 1
  else
   local.get $1
   local.get $1
   call $assembly/ndarray/NdArray<f64>#eq
  end
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9632
  i32.store offset=8
  local.get $2
  i32.const 1
  i32.const 9632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $1
  local.get $0
  call $assembly/ndarray/NdArray<f64>#gtAll
  if (result i32)
   i32.const 1
  else
   local.get $1
   local.get $0
   call $assembly/ndarray/NdArray<f64>#eq
  end
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9632
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.const 9632
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $1
  local.get $0
  call $assembly/ndarray/NdArray<f64>#ltAll
  if (result i32)
   i32.const 1
  else
   local.get $1
   local.get $0
   call $assembly/ndarray/NdArray<f64>#eq
  end
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9776
  i32.store offset=8
  local.get $0
  i32.const 1
  i32.const 9776
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  local.get $1
  local.get $1
  call $assembly/ndarray/NdArray<f64>#ltAll
  if (result i32)
   i32.const 1
  else
   local.get $1
   local.get $1
   call $assembly/ndarray/NdArray<f64>#eq
  end
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9776
  i32.store offset=8
  local.get $0
  i32.const 1
  i32.const 9776
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#lo (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  local.get $1
  i32.load offset=12
  local.set $3
  local.get $0
  i32.load offset=4
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $4
  i32.load offset=12
  local.get $3
  i32.ne
  if
   i32.const 10096
   i32.const 2224
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=12
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<i32>#slice
  local.tee $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=8
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $6
  i32.store
  local.get $6
  call $~lib/array/Array<i32>#slice
  local.tee $5
  i32.store offset=8
  loop $for-loop|0
   local.get $0
   i32.load offset=16
   local.get $2
   i32.gt_s
   if
    local.get $1
    local.get $2
    call $~lib/array/Array<i32>#__get
    i32.const 0
    i32.ge_s
    if
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.set $6
     local.get $5
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.get $6
     i32.mul
     local.get $3
     i32.add
     local.set $3
     local.get $4
     local.get $2
     local.get $4
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.get $6
     i32.sub
     call $~lib/array/Array<i32>#__set
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=12
  local.get $0
  local.get $4
  local.get $5
  local.get $3
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#hi (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  local.get $1
  i32.load offset=12
  local.set $3
  local.get $0
  i32.load offset=4
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $4
  i32.load offset=12
  local.get $3
  i32.ne
  if
   i32.const 10096
   i32.const 2224
   i32.const 419
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=4
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<i32>#slice
  local.tee $3
  i32.store offset=4
  loop $for-loop|0
   local.get $0
   i32.load offset=16
   local.get $2
   i32.gt_s
   if
    local.get $3
    local.get $2
    local.get $1
    local.get $2
    call $~lib/array/Array<i32>#__get
    i32.const 0
    i32.lt_s
    if (result i32)
     local.get $3
     local.get $2
     call $~lib/array/Array<i32>#__get
    else
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
    end
    call $~lib/array/Array<i32>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=8
  local.get $0
  i32.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#step (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  local.get $0
  i32.load offset=12
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<i32>#slice
  local.tee $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=8
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $6
  i32.store
  local.get $6
  call $~lib/array/Array<i32>#slice
  local.tee $5
  i32.store offset=8
  loop $for-loop|0
   local.get $0
   i32.load offset=16
   local.get $2
   i32.gt_s
   if
    local.get $1
    i32.load offset=12
    local.get $2
    i32.gt_s
    if (result i32)
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
    else
     i32.const 0
    end
    if
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.tee $6
     i32.const 0
     i32.lt_s
     if
      local.get $5
      local.get $2
      call $~lib/array/Array<i32>#__get
      local.get $4
      local.get $2
      call $~lib/array/Array<i32>#__get
      i32.const 1
      i32.sub
      i32.mul
      local.get $3
      i32.add
      local.set $3
      local.get $4
      local.get $2
      i32.const 0
      local.get $4
      local.get $2
      call $~lib/array/Array<i32>#__get
      i32.sub
      local.get $6
      i32.div_s
      f32.convert_i32_s
      f32.ceil
      i32.trunc_f32_s
      call $~lib/array/Array<i32>#__set
     else
      local.get $6
      if
       local.get $4
       local.get $2
       local.get $4
       local.get $2
       call $~lib/array/Array<i32>#__get
       local.get $6
       i32.div_s
       f32.convert_i32_s
       f32.ceil
       i32.trunc_f32_s
       call $~lib/array/Array<i32>#__set
      end
     end
     local.get $5
     local.get $2
     local.get $5
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.get $6
     i32.mul
     call $~lib/array/Array<i32>#__set
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=12
  local.get $0
  local.get $4
  local.get $5
  local.get $3
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $0
   i32.load offset=4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store
   i32.const 2
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       i32.const 2
       i32.sub
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 0
     i32.const 2
     i32.const 14
     i32.const 10336
     call $~lib/rt/__newArray
     local.tee $4
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 0
    i32.const 2
    i32.const 14
    i32.const 10368
    call $~lib/rt/__newArray
    local.tee $3
    i32.store offset=4
   end
   local.get $5
   local.get $1
   local.get $4
   local.get $3
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   i32.eq
   local.set $3
   local.get $0
   i32.load offset=4
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store
   i32.const 1
   global.set $~argumentsLength
   local.get $4
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>@varargs
   local.tee $4
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
   local.get $4
   call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>@varargs
   local.tee $1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
   local.get $1
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
   local.get $0
   i32.load
   local.get $3
   i32.xor
   i32.eqz
   if
    local.get $2
    i32.const 2496
    i32.const 2
    i32.const 19
    call $~lib/builtins/abort
    unreachable
   end
   call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/ndarray/NdArray<f64>#pick (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 12384
  call $~lib/rt/__newArray
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 12416
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=4
  local.get $0
  i32.load offset=12
  local.set $3
  loop $for-loop|0
   local.get $0
   i32.load offset=16
   local.get $2
   i32.gt_s
   if
    local.get $1
    i32.load offset=12
    local.get $2
    i32.gt_s
    if (result i32)
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $0
     i32.load offset=8
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $6
     i32.store offset=8
     local.get $3
     local.get $6
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
     i32.mul
     i32.add
     local.set $3
    else
     local.get $0
     i32.load offset=4
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $6
     i32.store offset=8
     local.get $4
     local.get $6
     local.get $2
     call $~lib/array/Array<i32>#__get
     call $~lib/array/Array<i32>#push
     local.get $0
     i32.load offset=8
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $6
     i32.store offset=8
     local.get $5
     local.get $6
     local.get $2
     call $~lib/array/Array<i32>#__get
     call $~lib/array/Array<i32>#push
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=12
  local.get $0
  local.get $4
  local.get $5
  local.get $3
  i32.const 0
  call $assembly/ndarray/NdArray<f64>#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/__tests__/ndarray.aspect/checkArrBase<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=16
  local.get $0
  i32.load offset=4
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store offset=12
  local.get $4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $1
  i32.load offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=16
  call $~lib/util/number/itoa32
  local.tee $6
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12768
  i32.store offset=12
  i32.const 12768
  i32.const 1
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12768
  i32.store offset=12
  i32.const 12768
  i32.const 3
  local.get $6
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12768
  i32.store offset=12
  i32.const 12768
  i32.const 5
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12768
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 6832
  i32.store offset=20
  i32.const 12768
  i32.const 12764
  i32.load
  i32.const 2
  i32.shr_u
  call $~lib/util/string/joinStringArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $6
  i32.store offset=8
  local.get $4
  local.get $5
  local.get $6
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
  local.get $0
  i32.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store offset=12
  local.get $4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $1
  i32.load offset=8
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=16
  call $~lib/util/number/itoa32
  local.tee $6
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12912
  i32.store offset=12
  i32.const 12912
  i32.const 1
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12912
  i32.store offset=12
  i32.const 12912
  i32.const 3
  local.get $6
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12912
  i32.store offset=12
  i32.const 12912
  i32.const 5
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 12912
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 6832
  i32.store offset=20
  i32.const 12912
  i32.const 12908
  i32.load
  i32.const 2
  i32.shr_u
  call $~lib/util/string/joinStringArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $6
  i32.store offset=8
  local.get $4
  local.get $5
  local.get $6
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
  local.get $0
  i32.load offset=12
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  local.get $1
  i32.load offset=12
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.load offset=16
  call $~lib/util/number/itoa32
  local.tee $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 13056
  i32.store offset=8
  i32.const 13056
  i32.const 1
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 13056
  i32.store offset=8
  i32.const 13056
  i32.const 3
  local.get $0
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 13056
  i32.store offset=8
  i32.const 13056
  i32.const 5
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 13056
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 6832
  i32.store offset=12
  i32.const 13056
  i32.const 13052
  i32.load
  i32.const 2
  i32.shr_u
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $1
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/ndarray/NdArray<f64>#slice<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=24
   local.get $0
   i32.load offset=16
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   call $~lib/array/Array<i32>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store
   local.get $5
   i32.const -1
   call $~lib/array/Array<i32>#fill
   local.tee $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   call $~lib/array/Array<i32>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store
   local.get $5
   i32.const -1
   call $~lib/array/Array<i32>#fill
   local.tee $9
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   call $~lib/array/Array<i32>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store
   local.get $5
   i32.const 0
   call $~lib/array/Array<i32>#fill
   local.tee $10
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.load offset=4
   local.tee $5
   i32.store offset=16
   loop $for-loop|0
    local.get $2
    local.get $4
    i32.lt_s
    if
     local.get $2
     local.get $1
     i32.load offset=12
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.const 4
      i32.const 0
      call $~onstore
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22332
      i32.lt_s
      br_if $folding-inner0
      local.get $2
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      i32.const 0
      i32.store
      local.get $1
      i32.load offset=12
      local.get $3
      i32.le_u
      if
       i32.const 1504
       i32.const 1760
       i32.const 114
       i32.const 42
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 4
      i32.const 0
      call $~onstore
      local.get $1
      i32.load offset=4
      local.get $3
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $7
      i32.store
      local.get $7
      i32.eqz
      if
       i32.const 1904
       i32.const 1760
       i32.const 118
       i32.const 40
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=20
      local.get $7
      i32.load offset=12
      i32.const 2
      i32.eq
      if
       local.get $9
       local.get $3
       local.get $7
       i32.const 0
       call $~lib/array/Array<i32>#__get
       i32.const 0
       i32.lt_s
       if (result i32)
        local.get $7
        i32.const 0
        call $~lib/array/Array<i32>#__get
        local.get $5
        local.get $3
        call $~lib/array/Array<i32>#__get
        i32.add
       else
        local.get $7
        i32.const 0
        call $~lib/array/Array<i32>#__get
       end
       call $~lib/array/Array<i32>#__set
       local.get $10
       local.get $2
       local.get $7
       i32.const 1
       call $~lib/array/Array<i32>#__get
       local.tee $3
       i32.const 1
       local.get $3
       select
       call $~lib/array/Array<i32>#__set
      else
       local.get $9
       local.get $3
       local.get $7
       i32.const 0
       call $~lib/array/Array<i32>#__get
       i32.const 0
       i32.lt_s
       if (result i32)
        local.get $7
        i32.const 0
        call $~lib/array/Array<i32>#__get
        local.get $5
        local.get $3
        call $~lib/array/Array<i32>#__get
        i32.add
       else
        local.get $7
        i32.const 0
        call $~lib/array/Array<i32>#__get
       end
       local.tee $8
       i32.const 0
       local.get $7
       i32.const 1
       call $~lib/array/Array<i32>#__get
       i32.const 0
       i32.lt_s
       if (result i32)
        local.get $7
        i32.const 1
        call $~lib/array/Array<i32>#__get
        local.get $5
        local.get $3
        call $~lib/array/Array<i32>#__get
        i32.add
       else
        local.get $7
        i32.const 1
        call $~lib/array/Array<i32>#__get
       end
       local.tee $11
       select
       call $~lib/array/Array<i32>#__set
       local.get $6
       local.get $3
       local.get $11
       local.get $8
       i32.sub
       local.get $8
       local.get $11
       select
       call $~lib/array/Array<i32>#__set
       local.get $10
       local.get $2
       local.get $7
       i32.const 2
       call $~lib/array/Array<i32>#__get
       local.tee $3
       i32.const 1
       local.get $3
       select
       call $~lib/array/Array<i32>#__set
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   local.get $9
   call $assembly/ndarray/NdArray<f64>#lo
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   local.get $6
   call $assembly/ndarray/NdArray<f64>#hi
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   local.get $10
   call $assembly/ndarray/NdArray<f64>#step
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|3
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 72
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=40
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=48
   global.get $~lib/memory/__stack_pointer
   i32.const 56
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=56
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=64
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   global.set $~argumentsLength
   i32.const 9
   call $assembly/utils/arange<f64>@varargs
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10032
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=4
   local.get $2
   local.get $3
   call $assembly/ndarray/NdArray<f64>#reshape
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   call $assembly/ndarray/NdArray<f64>#transpose
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10064
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   call $assembly/ndarray/NdArray<f64>#lo
   local.tee $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10144
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=4
   local.get $3
   local.get $5
   call $assembly/ndarray/NdArray<f64>#hi
   local.tee $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 10176
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=4
   local.get $3
   local.get $6
   call $assembly/ndarray/NdArray<f64>#step
   local.tee $5
   i32.store offset=24
   local.get $3
   i32.load offset=4
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=32
   local.get $6
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10208
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 10240
   i32.store offset=28
   local.get $6
   local.get $7
   i32.const 10240
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $3
   i32.load offset=8
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=32
   local.get $6
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10400
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 10432
   i32.store offset=28
   local.get $6
   local.get $7
   i32.const 10432
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $3
   i32.load offset=12
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 10528
   i32.store offset=28
   local.get $6
   i32.const 0
   i32.const 10528
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
   local.get $1
   i32.load offset=4
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=32
   local.get $6
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10624
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 10656
   i32.store offset=28
   local.get $6
   local.get $7
   i32.const 10656
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $1
   i32.load offset=8
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=32
   local.get $6
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10784
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 10816
   i32.store offset=28
   local.get $6
   local.get $7
   i32.const 10816
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $1
   i32.load offset=12
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 10944
   i32.store offset=28
   local.get $1
   i32.const 0
   i32.const 10944
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
   local.get $2
   i32.load offset=4
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 11072
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 11104
   i32.store offset=28
   local.get $1
   local.get $6
   i32.const 11104
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $2
   i32.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 11216
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 11248
   i32.store offset=28
   local.get $1
   local.get $6
   i32.const 11248
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $2
   i32.load offset=12
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 11360
   i32.store offset=28
   local.get $1
   i32.const 5
   i32.const 11360
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
   local.get $4
   i32.load offset=4
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 11472
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 11504
   i32.store offset=28
   local.get $1
   local.get $2
   i32.const 11504
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $4
   i32.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 11616
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 11648
   i32.store offset=28
   local.get $1
   local.get $2
   i32.const 11648
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $4
   i32.load offset=12
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 11760
   i32.store offset=28
   local.get $1
   i32.const 0
   i32.const 11760
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
   local.get $5
   i32.load offset=4
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 11872
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 11904
   i32.store offset=28
   local.get $1
   local.get $2
   i32.const 11904
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $5
   i32.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=32
   local.get $1
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 12016
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 12048
   i32.store offset=28
   local.get $1
   local.get $2
   i32.const 12048
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
   local.get $5
   i32.load offset=12
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 12176
   i32.store offset=28
   local.get $1
   i32.const 6
   i32.const 12176
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   global.set $~argumentsLength
   i32.const 108
   call $assembly/utils/arange<f64>@varargs
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 12304
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   local.get $2
   local.get $4
   call $assembly/ndarray/NdArray<f64>#reshape
   local.tee $1
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 12352
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   local.get $1
   local.get $4
   call $assembly/ndarray/NdArray<f64>#pick
   local.tee $2
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=4
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 12448
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=28
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 12480
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $7
   i32.store offset=32
   local.get $5
   local.get $6
   local.get $7
   i32.const 36
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $4
   i32.store offset=44
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 12512
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 12544
   i32.store offset=32
   local.get $2
   local.get $4
   i32.const 12512
   i32.const 12544
   call $assembly/__tests__/ndarray.aspect/checkArrBase<f64>
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 13104
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=32
   local.get $2
   local.get $4
   call $assembly/ndarray/NdArray<f64>#get
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13136
   i32.store offset=28
   local.get $2
   f64.const 36
   i32.const 13136
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 13264
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   local.get $1
   local.get $4
   call $assembly/ndarray/NdArray<f64>#pick
   local.tee $1
   i32.store offset=48
   global.get $~lib/memory/__stack_pointer
   i32.const 52
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 13296
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=28
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 13328
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=32
   local.get $4
   local.get $5
   local.get $6
   i32.const 104
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $2
   i32.store offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13360
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 12544
   i32.store offset=32
   local.get $1
   local.get $2
   i32.const 13360
   i32.const 12544
   call $assembly/__tests__/ndarray.aspect/checkArrBase<f64>
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 13392
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=32
   local.get $1
   local.get $2
   call $assembly/ndarray/NdArray<f64>#get
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13424
   i32.store offset=28
   local.get $1
   f64.const 104
   i32.const 13424
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.const 4
   i32.const 0
   call $~onstore
   global.get $~lib/memory/__stack_pointer
   i32.const 56
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   i32.const 2
   i32.const 19
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.load offset=4
   i32.store offset=60
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 13568
   call $~lib/rt/__newArray
   local.set $4
   local.get $2
   i32.load offset=4
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store
   local.get $4
   if
    local.get $2
    local.get $4
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   local.get $3
   local.get $2
   call $assembly/ndarray/NdArray<f64>#slice<~lib/array/Array<i32>>
   local.tee $1
   i32.store offset=60
   global.get $~lib/memory/__stack_pointer
   i32.const 56
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 13600
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=28
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 13632
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   i32.store offset=32
   local.get $4
   local.get $5
   local.get $6
   i32.const 3
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $2
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13664
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13696
   i32.store offset=32
   local.get $1
   local.get $2
   i32.const 13664
   i32.const 13696
   call $assembly/__tests__/ndarray.aspect/checkArrBase<f64>
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 13744
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=32
   local.get $1
   local.get $2
   call $assembly/ndarray/NdArray<f64>#get
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13776
   i32.store offset=28
   local.get $2
   f64.const 3
   i32.const 13776
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 13920
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=32
   local.get $1
   local.get $2
   call $assembly/ndarray/NdArray<f64>#get
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13952
   i32.store offset=28
   local.get $2
   f64.const 4
   i32.const 13952
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 14096
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=32
   local.get $1
   local.get $2
   call $assembly/ndarray/NdArray<f64>#get
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<f64>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 14128
   i32.store offset=28
   local.get $1
   f64.const 5
   i32.const 14128
   call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<f64>#toBe
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 14272
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=24
   local.get $3
   i32.load offset=16
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   call $~lib/array/Array<i32>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   local.get $2
   i32.const -1
   call $~lib/array/Array<i32>#fill
   local.tee $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   call $~lib/array/Array<i32>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   local.get $2
   i32.const -1
   call $~lib/array/Array<i32>#fill
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $6
   call $~lib/array/Array<i32>#constructor
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $8
   i32.store
   local.get $8
   i32.const 0
   call $~lib/array/Array<i32>#fill
   local.tee $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.load offset=4
   local.tee $2
   i32.store offset=16
   loop $for-loop|0
    local.get $0
    local.get $6
    i32.lt_s
    if
     local.get $0
     local.get $5
     i32.load offset=12
     i32.lt_s
     if
      local.get $1
      local.get $0
      local.get $5
      local.get $0
      call $~lib/array/Array<i32>#__get
      local.tee $9
      i32.const 0
      i32.lt_s
      if (result i32)
       local.get $2
       local.get $0
       call $~lib/array/Array<i32>#__get
       local.get $9
       i32.add
      else
       local.get $9
      end
      call $~lib/array/Array<i32>#__set
      local.get $8
      local.get $0
      i32.const 1
      call $~lib/array/Array<i32>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   local.get $1
   call $assembly/ndarray/NdArray<f64>#lo
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   local.get $7
   call $assembly/ndarray/NdArray<f64>#hi
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   local.get $8
   call $assembly/ndarray/NdArray<f64>#step
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=64
   global.get $~lib/memory/__stack_pointer
   i32.const 68
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 14304
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=28
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 14336
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=32
   local.get $2
   local.get $3
   local.get $4
   i32.const 6
   i32.const 0
   call $assembly/ndarray/NdArray<f64>#constructor
   local.tee $1
   i32.store offset=68
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 14368
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 13696
   i32.store offset=32
   local.get $0
   local.get $1
   i32.const 14368
   i32.const 13696
   call $assembly/__tests__/ndarray.aspect/checkArrBase<f64>
   global.get $~lib/memory/__stack_pointer
   i32.const 72
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/ndarray/NdArray<f64>#order (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  block $folding-inner1
   block $case3|0
    block $case2|0
     block $case1|0
      block $case0|0
       local.get $0
       i32.load offset=16
       i32.const 1
       i32.sub
       br_table $case0|0 $case1|0 $case2|0 $case3|0
      end
      i32.const 1
      i32.const 2
      i32.const 4
      i32.const 14656
      call $~lib/rt/__newArray
      local.set $0
      br $folding-inner1
     end
     local.get $0
     i32.load offset=8
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $3
     i32.store
     local.get $3
     i32.const 0
     call $~lib/array/Array<i32>#__get
     f64.convert_i32_s
     f64.abs
     local.set $1
     local.get $0
     i32.load offset=8
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     local.get $0
     i32.store
     local.get $0
     i32.const 1
     call $~lib/array/Array<i32>#__get
     f64.convert_i32_s
     f64.abs
     local.get $1
     f64.lt
     if (result i32)
      i32.const 2
      i32.const 2
      i32.const 4
      i32.const 14688
      call $~lib/rt/__newArray
     else
      i32.const 2
      i32.const 2
      i32.const 4
      i32.const 14720
      call $~lib/rt/__newArray
     end
     local.set $0
     br $folding-inner1
    end
    local.get $0
    i32.load offset=8
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $3
    i32.store
    local.get $3
    i32.const 0
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    f64.abs
    local.set $4
    local.get $0
    i32.load offset=8
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $3
    i32.store
    local.get $3
    i32.const 1
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    f64.abs
    local.set $1
    local.get $0
    i32.load offset=8
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $0
    i32.store
    local.get $0
    i32.const 2
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    f64.abs
    local.set $2
    local.get $1
    local.get $4
    f64.lt
    if (result i32)
     local.get $1
     local.get $2
     f64.gt
     if (result i32)
      i32.const 3
      i32.const 2
      i32.const 4
      i32.const 14752
      call $~lib/rt/__newArray
     else
      local.get $2
      local.get $4
      f64.lt
      if (result i32)
       i32.const 3
       i32.const 2
       i32.const 4
       i32.const 14784
       call $~lib/rt/__newArray
      else
       i32.const 3
       i32.const 2
       i32.const 4
       i32.const 14816
       call $~lib/rt/__newArray
      end
     end
    else
     local.get $2
     local.get $4
     f64.lt
     if (result i32)
      i32.const 3
      i32.const 2
      i32.const 4
      i32.const 14848
      call $~lib/rt/__newArray
     else
      local.get $1
      local.get $2
      f64.lt
      if (result i32)
       i32.const 3
       i32.const 2
       i32.const 4
       i32.const 14880
       call $~lib/rt/__newArray
      else
       i32.const 3
       i32.const 2
       i32.const 4
       i32.const 14912
       call $~lib/rt/__newArray
      end
     end
    end
    local.set $0
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.load offset=8
   local.tee $3
   i32.store offset=4
   local.get $3
   i32.const 0
   call $~lib/array/Array<i32>#__get
   local.get $3
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   call $~lib/array/Array<i32>#__get
   i32.gt_s
   if (result i32)
    local.get $0
    i32.load offset=16
    call $assembly/utils/iota
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $0
    i32.store
    local.get $0
    call $~lib/array/Array<i32>#reverse
   else
    local.get $0
    i32.load offset=16
    call $assembly/utils/iota
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|4~checkOrderTranspose (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=8
  local.get $0
  call $assembly/ndarray/NdArray<f64>#order
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store offset=4
  local.get $4
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15104
  i32.store offset=4
  i32.const 15104
  i32.const 1
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15104
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 6832
  i32.store offset=8
  i32.const 15104
  i32.const 15100
  i32.load
  i32.const 2
  i32.shr_u
  call $~lib/util/string/joinStringArray
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $5
  i32.store offset=4
  local.get $4
  local.get $1
  local.get $5
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
  local.get $0
  call $assembly/ndarray/NdArray<f64>#transpose
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=8
  local.get $0
  call $assembly/ndarray/NdArray<f64>#order
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/array/Array<i32>>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15232
  i32.store offset=4
  i32.const 15232
  i32.const 1
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15232
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 6832
  i32.store offset=8
  i32.const 15232
  i32.const 15228
  i32.load
  i32.const 2
  i32.shr_u
  call $~lib/util/string/joinStringArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $2
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|4
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 1
  global.set $~argumentsLength
  i32.const 27
  call $assembly/utils/arange<f64>@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store
  i32.const 3
  i32.const 2
  i32.const 4
  i32.const 14544
  call $~lib/rt/__newArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=4
  local.get $1
  local.get $2
  call $assembly/ndarray/NdArray<f64>#reshape
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 1
  global.set $~argumentsLength
  i32.const 3
  call $assembly/utils/arange<f64>@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store
  i32.const 1
  i32.const 2
  i32.const 4
  i32.const 14576
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=4
  local.get $2
  local.get $3
  call $assembly/ndarray/NdArray<f64>#reshape
  local.tee $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 1
  global.set $~argumentsLength
  i32.const 16
  call $assembly/utils/arange<f64>@varargs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store
  i32.const 4
  i32.const 2
  i32.const 4
  i32.const 14608
  call $~lib/rt/__newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store offset=4
  local.get $3
  local.get $4
  call $assembly/ndarray/NdArray<f64>#reshape
  local.tee $2
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15264
  i32.store offset=20
  i32.const 3
  i32.const 2
  i32.const 4
  i32.const 15296
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=4
  i32.const 3
  i32.const 2
  i32.const 4
  i32.const 15328
  call $~lib/rt/__newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15360
  i32.store offset=28
  i32.const 4
  global.set $~argumentsLength
  local.get $0
  local.get $3
  local.get $4
  i32.const 15360
  i32.const 15264
  i32.load
  call_indirect $0 (type $i32_i32_i32_i32_=>_none)
  i32.const 1
  i32.const 2
  i32.const 4
  i32.const 15392
  call $~lib/rt/__newArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  i32.const 1
  i32.const 2
  i32.const 4
  i32.const 15424
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15456
  i32.store offset=28
  i32.const 4
  global.set $~argumentsLength
  local.get $1
  local.get $0
  local.get $3
  i32.const 15456
  i32.const 15264
  i32.load
  call_indirect $0 (type $i32_i32_i32_i32_=>_none)
  i32.const 4
  i32.const 2
  i32.const 4
  i32.const 15488
  call $~lib/rt/__newArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=4
  i32.const 4
  i32.const 2
  i32.const 4
  i32.const 15536
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15456
  i32.store offset=28
  i32.const 4
  global.set $~argumentsLength
  local.get $2
  local.get $0
  local.get $1
  i32.const 15456
  i32.const 15264
  i32.load
  call_indirect $0 (type $i32_i32_i32_i32_=>_none)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0~anonymous|5
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   global.set $~argumentsLength
   i32.const 27
   call $assembly/utils/arange<f64>@varargs
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 15712
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   call $assembly/ndarray/NdArray<f64>#reshape
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 15744
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 1
   global.set $~argumentsLength
   i32.const 9
   call $assembly/utils/arange<f64>@varargs
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 21968
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   call $assembly/ndarray/NdArray<f64>#reshape
   local.tee $2
   i32.store offset=16
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 22000
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=20
   local.get $2
   local.get $3
   call $assembly/ndarray/NdArray<f64>#pick
   i32.load offset=4
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store
   global.get $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
   i32.eqz
   if
    i32.const 1
    global.set $~argumentsLength
    local.get $3
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>@varargs
    local.tee $3
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
    local.get $3
    call $node_modules/@as-pect/assembly/assembly/internal/log/logReflectedValue
   end
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 22032
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store offset=20
   local.get $2
   local.get $3
   call $assembly/ndarray/NdArray<f64>#pick
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   local.get $2
   i32.load offset=4
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store
   local.get $3
   call $assembly/utils/shapeSize
   local.set $3
   loop $for-loop|0
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $0
     call $assembly/ndarray/NdArray<f64>#geti
     local.set $1
     global.get $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
     i32.eqz
     if
      i32.const 1
      global.set $~argumentsLength
      local.get $1
      call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<f64>@varargs
      local.tee $4
      call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
      local.get $4
      call $node_modules/@as-pect/assembly/assembly/internal/log/logReflectedValue
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/__tests__/ndarray.aspect~anonymous|0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 1120
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4416
  i32.store offset=4
  i32.const 1120
  i32.const 4416
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4448
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 8736
  i32.store offset=4
  i32.const 4448
  i32.const 8736
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 8768
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9920
  i32.store offset=4
  i32.const 8768
  i32.const 9920
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 9952
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 14400
  i32.store offset=4
  i32.const 9952
  i32.const 14400
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 14432
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15584
  i32.store offset=4
  i32.const 14432
  i32.const 15584
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 15616
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 22064
  i32.store offset=4
  i32.const 15616
  i32.const 22064
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $0
  local.get $1
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.set $5
  local.get $3
  if
   local.get $5
   local.get $3
   local.get $1
   call $~lib/memory/memory.copy
  end
  local.get $5
  i32.store
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.const 0
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $5
  i32.store
  local.get $5
  if
   local.get $2
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  i32.const 4
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $5
  i32.store offset=4
  local.get $2
  i32.const 8
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $1
  i32.store offset=8
  local.get $2
  i32.const 12
  i32.const 4
  i32.const 1
  call $~onstore
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<i32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 16
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1712
   i32.const 1760
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.const 8
  local.get $0
  i32.const 8
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $1
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  i32.store offset=4
  local.get $1
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.store offset=8
  local.get $1
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/staticarray/StaticArray<~lib/array/Array<i32>>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  local.get $1
  i32.le_u
  if
   i32.const 1504
   i32.const 1808
   i32.const 118
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 1904
   i32.const 1808
   i32.const 122
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/staticarray/StaticArray.fromArray<f64> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  i32.const 3
  i32.shl
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/memory/memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1712
   i32.const 2432
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<usize,i32>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 24
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  local.get $0
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 3
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  local.get $0
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $1
  i32.store offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 12
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 16
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 20
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<f64>@varargs (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   call $~lib/map/Map<usize,i32>#constructor
   i32.store
  end
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<f64>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#slice (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  i32.const 0
  local.get $0
  i32.load offset=12
  local.tee $2
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $2
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store
  local.get $2
  i32.load offset=4
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $3
  i32.const 2
  i32.shl
  call $~lib/memory/memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/staticarray/StaticArray<f64>#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  i32.const 134217727
  i32.gt_u
  if
   i32.const 1712
   i32.const 1808
   i32.const 91
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.const 3
  i32.shl
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 5248
   return
  end
  i32.const 0
  local.get $0
  i32.sub
  local.get $0
  local.get $0
  i32.const 31
  i32.shr_u
  local.tee $0
  select
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $3
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $3
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $3
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $3
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $3
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.get $0
  i32.add
  local.tee $1
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  if
   local.get $2
   i32.const 0
   i32.const 2
   i32.const 0
   call $~onstore
   i32.const 45
   i32.store16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  i32.const 0
  call $~onstore
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $4
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 6832
   return
  end
  local.get $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 6832
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $3
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    i32.load
    local.tee $5
    i32.store offset=4
    local.get $5
    if
     local.get $5
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.get $2
     i32.add
     local.set $2
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $1
  i32.const 6828
  i32.load
  i32.const 1
  i32.shr_u
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  local.get $5
  i32.mul
  local.get $2
  i32.add
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  i32.const 0
  local.set $3
  loop $for-loop|1
   local.get $3
   local.get $4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $3
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    local.get $6
    if
     local.get $1
     i32.const 1
     i32.shl
     local.get $2
     i32.add
     local.get $6
     local.get $6
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $6
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $1
     local.get $6
     i32.add
     local.set $1
    end
    local.get $5
    if
     local.get $1
     i32.const 1
     i32.shl
     local.get $2
     i32.add
     i32.const 6832
     local.get $5
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $1
     local.get $5
     i32.add
     local.set $1
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $4
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   local.get $1
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   call $~lib/memory/memory.copy
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/map/Map<usize,i32>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  local.get $0
  i32.load
  local.get $1
  local.tee $3
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $1
  local.get $1
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $1
  local.get $1
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $1
  local.get $1
  i32.const 16
  i32.shr_u
  i32.xor
  local.tee $4
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $__inlined_func$~lib/map/Map<usize,i32>#find
   loop $while-continue|0
    local.get $1
    if
     local.get $1
     i32.load offset=8
     local.tee $5
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $3
      local.get $1
      i32.load
      i32.eq
     end
     br_if $__inlined_func$~lib/map/Map<usize,i32>#find
     local.get $5
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  if
   local.get $1
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
  else
   local.get $0
   i32.load offset=16
   local.get $0
   i32.load offset=12
   i32.eq
   if
    local.get $0
    local.get $0
    i32.load offset=20
    local.get $0
    i32.load offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<usize,i32>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $0
   i32.load offset=8
   local.tee $5
   i32.store
   local.get $0
   i32.load offset=16
   local.tee $6
   i32.const 1
   i32.add
   local.set $1
   local.get $0
   i32.const 16
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store offset=16
   local.get $6
   i32.const 12
   i32.mul
   local.get $5
   i32.add
   local.tee $1
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $3
   i32.store
   local.get $1
   i32.const 4
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=4
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   local.set $2
   local.get $0
   i32.const 20
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=20
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   local.get $4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load
   local.set $2
   local.get $1
   i32.const 8
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $2
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   local.get $1
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/ndarray/NdArray<f64>>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    call $~lib/map/Map<usize,i32>#constructor
    local.tee $2
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 8
   i32.const 0
   call $~onstore
   i64.const 0
   i64.store
   block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/ndarray/NdArray<f64>>
    local.get $0
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 4
     i32.const 0
     call $~onstore
     i32.const 7408
     i32.store
     i32.const 1
     i32.const 0
     i32.const 0
     i32.const 0
     i32.const 0
     i32.const 0
     i32.const 4
     i32.const 1
     i32.const 5
     i32.const 7408
     i32.const 0
     i32.const 0
     i32.const 1
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
     local.set $0
     br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/ndarray/NdArray<f64>>
    end
    local.get $2
    i32.load
    local.get $2
    i32.load offset=4
    local.get $0
    local.tee $1
    i32.const -1028477379
    i32.mul
    i32.const 374761397
    i32.add
    i32.const 17
    i32.rotl
    i32.const 668265263
    i32.mul
    local.tee $0
    local.get $0
    i32.const 15
    i32.shr_u
    i32.xor
    i32.const -2048144777
    i32.mul
    local.tee $0
    local.get $0
    i32.const 13
    i32.shr_u
    i32.xor
    i32.const -1028477379
    i32.mul
    local.tee $0
    local.get $0
    i32.const 16
    i32.shr_u
    i32.xor
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $0
    block $__inlined_func$~lib/map/Map<usize,i32>#find
     loop $while-continue|0
      local.get $0
      if
       local.get $0
       i32.load offset=8
       local.tee $3
       i32.const 1
       i32.and
       if (result i32)
        i32.const 0
       else
        local.get $1
        local.get $0
        i32.load
        i32.eq
       end
       br_if $__inlined_func$~lib/map/Map<usize,i32>#find
       local.get $3
       i32.const -2
       i32.and
       local.set $0
       br $while-continue|0
      end
     end
     i32.const 0
     local.set $0
    end
    local.get $0
    if
     local.get $2
     local.get $1
     call $~lib/map/Map<usize,i32>#get
     local.set $0
     br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/ndarray/NdArray<f64>>
    end
    local.get $1
    i32.const 16
    i32.sub
    i32.load offset=16
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    i32.const 7408
    i32.store
    local.get $2
    local.get $1
    i32.const 0
    i32.const 1
    i32.const 0
    i32.const 24
    local.get $1
    i32.const 0
    local.get $0
    i32.const 1
    i32.const 5
    i32.const 7408
    i32.const 0
    i32.const 1
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.tee $0
    call $~lib/map/Map<usize,i32>#set
    i32.const 0
    i32.const 15
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.const 7568
    i32.const 0
    call $~lib/memory/memory.copy
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 4
    i32.const 0
    call $~onstore
    local.get $3
    i32.store offset=4
    local.get $1
    local.get $0
    local.get $2
    local.get $3
    call $assembly/ndarray/NdArray<f64>#__aspectAddReflectedValueKeyValuePairs
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool>@varargs (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4
    i32.const 0
    call $~onstore
    call $~lib/map/Map<usize,i32>#constructor
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22332
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   i32.const 9216
   i32.store
   i32.const 0
   i32.const 1
   i32.const 9
   i32.const 9216
   local.get $0
   f64.convert_i32_u
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 38736
  i32.const 38784
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $1
   i32.store
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<i32>>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>@varargs (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 4
   i32.const 0
   call $~onstore
   call $~lib/map/Map<usize,i32>#constructor
   i32.store
  end
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/utils/iota (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  call $~lib/array/Array<i32>#constructor
  local.tee $2
  i32.store
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $2
    local.get $1
    local.get $1
    call $~lib/array/Array<i32>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:node_modules/@as-pect/assembly/assembly/internal/call/__call (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22332
  i32.lt_s
  if
   i32.const 38736
   i32.const 38784
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  i32.const 0
  call $~onstore
  local.get $0
  i32.store
  i32.const 0
  global.set $~argumentsLength
  local.get $0
  i32.load
  call_indirect $0 (type $none_=>_none)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__visit (param $0 i32)
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  call $~lib/rt/rtrace/onvisit
  i32.eqz
  if
   return
  end
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 1376
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
)
